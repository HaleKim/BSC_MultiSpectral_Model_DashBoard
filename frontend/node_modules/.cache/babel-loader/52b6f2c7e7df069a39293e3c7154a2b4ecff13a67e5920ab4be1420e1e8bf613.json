{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project2\\\\DashBoard\\\\frontend\\\\src\\\\components\\\\EventLog.js\",\n  _s = $RefreshSig$();\n// /frontend/src/components/EventLog.js (수정된 최종본)\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { getEvents } from '../services/api';\nimport { subscribeToEvent, getSocket, isSocketConnected } from '../services/socket';\nimport personIcon from '../assets/person.png';\nimport boarIcon from '../assets/boar.png';\nimport deerIcon from '../assets/deer.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventIcon = ({\n  type\n}) => {\n  const iconMap = {\n    person: {\n      src: personIcon,\n      bgColor: 'bg-red-500'\n    },\n    scrofa: {\n      src: boarIcon,\n      bgColor: 'bg-blue-500'\n    },\n    inermis: {\n      src: deerIcon,\n      bgColor: 'bg-green-500'\n    }\n  };\n  const icon = iconMap[type] || {\n    src: personIcon,\n    bgColor: 'bg-gray-500'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `w-10 h-10 rounded-full flex items-center justify-center ${icon.bgColor} flex-shrink-0`,\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: icon.src,\n      alt: type,\n      className: \"w-6 h-6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_c = EventIcon;\nconst ConfidenceGauge = ({\n  value\n}) => {\n  const percent = parseFloat(value) * 100 || 0;\n  let bgColor = 'bg-gray-500';\n  if (percent >= 90) bgColor = 'bg-red-600 animate-pulse';else if (percent >= 80) bgColor = 'bg-green-500';else if (percent >= 50) bgColor = 'bg-yellow-500';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full bg-gray-600 rounded-full h-2.5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${bgColor} h-2.5 rounded-full`,\n      style: {\n        width: `${percent}%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_c2 = ConfidenceGauge;\nconst EventLog = ({\n  onOpenFull\n}) => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [lastUpdateTime, setLastUpdateTime] = useState(null);\n  const [socketStatus, setSocketStatus] = useState('연결 중...');\n\n  // 초기 이벤트 로드\n  const fetchInitialEvents = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      console.log('이벤트 로그 초기 로드 시작...');\n      const {\n        data\n      } = await getEvents();\n      console.log('초기 이벤트 데이터:', data);\n      setEvents(data.slice(0, 50));\n      setLastUpdateTime(new Date());\n    } catch (error) {\n      console.error(\"이벤트 로그 초기화 실패:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  // 새 이벤트 처리\n  const handleNewEvent = useCallback(newEvent => {\n    console.log('새 이벤트 수신됨:', newEvent);\n    setLastUpdateTime(new Date());\n    setEvents(prev => {\n      // 중복 이벤트 방지 (ID와 타임스탬프로 체크)\n      const isDuplicate = prev.some(event => event.id === newEvent.id && event.timestamp === newEvent.timestamp);\n      if (isDuplicate) {\n        console.log('중복 이벤트 무시:', newEvent.id);\n        return prev;\n      }\n      console.log('새 이벤트 추가:', newEvent.detected_object, 'confidence:', newEvent.confidence);\n\n      // 새 이벤트를 맨 앞에 추가하고 최대 20개 유지\n      const updatedEvents = [newEvent, ...prev.slice(0, 19)];\n      console.log('업데이트된 이벤트 목록 길이:', updatedEvents.length);\n      return updatedEvents;\n    });\n  }, []);\n\n  // 소켓 상태 확인\n  const checkSocketStatus = useCallback(() => {\n    const socket = getSocket();\n    if (socket && socket.connected) {\n      setSocketStatus(`연결됨 (ID: ${socket.id})`);\n    } else {\n      setSocketStatus('연결 안됨');\n    }\n  }, []);\n  useEffect(() => {\n    console.log('EventLog 컴포넌트 마운트 - 소켓 이벤트 구독 시작');\n\n    // 초기 이벤트 로드\n    fetchInitialEvents();\n\n    // 실시간 이벤트 구독\n    const unsubscribe = subscribeToEvent('new_event', handleNewEvent);\n    console.log('new_event 소켓 이벤트 구독 완료');\n\n    // 소켓 상태 주기적 확인\n    const statusInterval = setInterval(checkSocketStatus, 2000);\n\n    // 초기 상태 확인\n    checkSocketStatus();\n    return () => {\n      console.log('EventLog 컴포넌트 언마운트 - 소켓 이벤트 구독 해제');\n      clearInterval(statusInterval);\n      if (unsubscribe) {\n        unsubscribe();\n      }\n    };\n  }, [fetchInitialEvents, handleNewEvent, checkSocketStatus]);\n\n  // 새로고침 버튼 클릭 핸들러\n  const handleRefresh = () => {\n    console.log('수동 새로고침 요청');\n    fetchInitialEvents();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 bg-gray-800 rounded-lg shadow-lg h-full flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold text-white\",\n        children: \"\\uC2E4\\uC2DC\\uAC04 \\uC774\\uBCA4\\uD2B8 \\uB85C\\uADF8 (\\uCD5C\\uC2E0 20\\uAC1C)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [lastUpdateTime && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs text-gray-400\",\n          children: [\"\\uB9C8\\uC9C0\\uB9C9 \\uC5C5\\uB370\\uC774\\uD2B8: \", lastUpdateTime.toLocaleTimeString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRefresh,\n          className: \"px-3 py-1 bg-blue-600 hover:bg-blue-700 text-white text-sm rounded transition-colors\",\n          children: \"\\uC0C8\\uB85C\\uACE0\\uCE68\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-2 overflow-y-auto flex-grow h-96 pr-2\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-8 w-8 border-b-2 border-white mx-auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400 mt-2\",\n          children: \"\\uC774\\uBCA4\\uD2B8 \\uB85C\\uB529 \\uC911...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }, this) : events.length > 0 ? events.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-3 bg-gray-700 rounded-lg flex items-center space-x-3 cursor-pointer hover:bg-gray-600 transition-colors\",\n        onClick: () => onOpenFull && onOpenFull(event),\n        children: [/*#__PURE__*/_jsxDEV(EventIcon, {\n          type: event.detected_object\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-grow overflow-hidden\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-baseline\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"font-bold text-white capitalize truncate\",\n              children: event.detected_object\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs font-mono text-gray-300\",\n              children: [(parseFloat(event.confidence) * 100).toFixed(1), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(ConfidenceGauge, {\n            value: event.confidence\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-400 mt-1 truncate\",\n              children: event.camera_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-400 mt-1 flex-shrink-0\",\n              children: new Date(event.timestamp).toLocaleTimeString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 29\n        }, this)]\n      }, `${event.id}-${event.timestamp}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500\",\n          children: \"\\uD45C\\uC2DC\\uD560 \\uC774\\uBCA4\\uD2B8\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-gray-600 mt-2\",\n          children: \"\\uC2E4\\uC2DC\\uAC04 \\uC774\\uBCA4\\uD2B8\\uAC00 \\uBC1C\\uC0DD\\uD558\\uBA74 \\uC5EC\\uAE30\\uC5D0 \\uD45C\\uC2DC\\uB429\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2 text-xs text-gray-500 space-y-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uCD1D \\uC774\\uBCA4\\uD2B8 \\uC218: \", events.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC18C\\uCF13 \\uC0C1\\uD0DC: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: isSocketConnected() ? 'text-green-400' : 'text-red-400',\n          children: socketStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uB9C8\\uC9C0\\uB9C9 \\uC5C5\\uB370\\uC774\\uD2B8: \", lastUpdateTime ? lastUpdateTime.toLocaleTimeString() : '없음']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 9\n  }, this);\n};\n_s(EventLog, \"20pWBajBnUgXVmvCkNVfLZuKl4I=\");\n_c3 = EventLog;\nexport default EventLog;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"EventIcon\");\n$RefreshReg$(_c2, \"ConfidenceGauge\");\n$RefreshReg$(_c3, \"EventLog\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","getEvents","subscribeToEvent","getSocket","isSocketConnected","personIcon","boarIcon","deerIcon","jsxDEV","_jsxDEV","EventIcon","type","iconMap","person","src","bgColor","scrofa","inermis","icon","className","children","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","ConfidenceGauge","value","percent","parseFloat","style","width","_c2","EventLog","onOpenFull","_s","events","setEvents","isLoading","setIsLoading","lastUpdateTime","setLastUpdateTime","socketStatus","setSocketStatus","fetchInitialEvents","console","log","data","slice","Date","error","handleNewEvent","newEvent","prev","isDuplicate","some","event","id","timestamp","detected_object","confidence","updatedEvents","length","checkSocketStatus","socket","connected","unsubscribe","statusInterval","setInterval","clearInterval","handleRefresh","toLocaleTimeString","onClick","map","toFixed","camera_name","_c3","$RefreshReg$"],"sources":["D:/Project2/DashBoard/frontend/src/components/EventLog.js"],"sourcesContent":["// /frontend/src/components/EventLog.js (수정된 최종본)\r\n\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { getEvents } from '../services/api';\r\nimport { subscribeToEvent, getSocket, isSocketConnected } from '../services/socket';\r\n\r\nimport personIcon from '../assets/person.png';\r\nimport boarIcon from '../assets/boar.png';\r\nimport deerIcon from '../assets/deer.png';\r\n\r\nconst EventIcon = ({ type }) => {\r\n    const iconMap = {\r\n        person: { src: personIcon, bgColor: 'bg-red-500' },\r\n        scrofa: { src: boarIcon, bgColor: 'bg-blue-500' },\r\n        inermis: { src: deerIcon, bgColor: 'bg-green-500' },\r\n    };\r\n    const icon = iconMap[type] || { src: personIcon, bgColor: 'bg-gray-500' };\r\n\r\n    return (\r\n        <div className={`w-10 h-10 rounded-full flex items-center justify-center ${icon.bgColor} flex-shrink-0`}>\r\n            <img src={icon.src} alt={type} className=\"w-6 h-6\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ConfidenceGauge = ({ value }) => {\r\n    const percent = parseFloat(value) * 100 || 0;\r\n    let bgColor = 'bg-gray-500';\r\n    if (percent >= 90) bgColor = 'bg-red-600 animate-pulse';\r\n    else if (percent >= 80) bgColor = 'bg-green-500';\r\n    else if (percent >= 50) bgColor = 'bg-yellow-500';\r\n\r\n    return (\r\n        <div className=\"w-full bg-gray-600 rounded-full h-2.5\">\r\n            <div className={`${bgColor} h-2.5 rounded-full`} style={{ width: `${percent}%` }}></div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst EventLog = ({ onOpenFull }) => {\r\n    const [events, setEvents] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [lastUpdateTime, setLastUpdateTime] = useState(null);\r\n    const [socketStatus, setSocketStatus] = useState('연결 중...');\r\n\r\n    // 초기 이벤트 로드\r\n    const fetchInitialEvents = useCallback(async () => {\r\n        try {\r\n            setIsLoading(true);\r\n            console.log('이벤트 로그 초기 로드 시작...');\r\n            const { data } = await getEvents();\r\n            console.log('초기 이벤트 데이터:', data);\r\n            setEvents(data.slice(0, 50));\r\n            setLastUpdateTime(new Date());\r\n        } catch (error) {\r\n            console.error(\"이벤트 로그 초기화 실패:\", error);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }, []);\r\n\r\n    // 새 이벤트 처리\r\n    const handleNewEvent = useCallback((newEvent) => {\r\n        console.log('새 이벤트 수신됨:', newEvent);\r\n        setLastUpdateTime(new Date());\r\n        \r\n        setEvents(prev => {\r\n            // 중복 이벤트 방지 (ID와 타임스탬프로 체크)\r\n            const isDuplicate = prev.some(event => \r\n                event.id === newEvent.id && event.timestamp === newEvent.timestamp\r\n            );\r\n            \r\n            if (isDuplicate) {\r\n                console.log('중복 이벤트 무시:', newEvent.id);\r\n                return prev;\r\n            }\r\n            \r\n            console.log('새 이벤트 추가:', newEvent.detected_object, 'confidence:', newEvent.confidence);\r\n            \r\n            // 새 이벤트를 맨 앞에 추가하고 최대 20개 유지\r\n            const updatedEvents = [newEvent, ...prev.slice(0, 19)];\r\n            console.log('업데이트된 이벤트 목록 길이:', updatedEvents.length);\r\n            return updatedEvents;\r\n        });\r\n    }, []);\r\n\r\n    // 소켓 상태 확인\r\n    const checkSocketStatus = useCallback(() => {\r\n        const socket = getSocket();\r\n        if (socket && socket.connected) {\r\n            setSocketStatus(`연결됨 (ID: ${socket.id})`);\r\n        } else {\r\n            setSocketStatus('연결 안됨');\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log('EventLog 컴포넌트 마운트 - 소켓 이벤트 구독 시작');\r\n        \r\n        // 초기 이벤트 로드\r\n        fetchInitialEvents();\r\n\r\n        // 실시간 이벤트 구독\r\n        const unsubscribe = subscribeToEvent('new_event', handleNewEvent);\r\n        console.log('new_event 소켓 이벤트 구독 완료');\r\n\r\n        // 소켓 상태 주기적 확인\r\n        const statusInterval = setInterval(checkSocketStatus, 2000);\r\n        \r\n        // 초기 상태 확인\r\n        checkSocketStatus();\r\n\r\n        return () => {\r\n            console.log('EventLog 컴포넌트 언마운트 - 소켓 이벤트 구독 해제');\r\n            clearInterval(statusInterval);\r\n            if (unsubscribe) {\r\n                unsubscribe();\r\n            }\r\n        };\r\n    }, [fetchInitialEvents, handleNewEvent, checkSocketStatus]);\r\n\r\n    // 새로고침 버튼 클릭 핸들러\r\n    const handleRefresh = () => {\r\n        console.log('수동 새로고침 요청');\r\n        fetchInitialEvents();\r\n    };\r\n\r\n    return (\r\n        <div className=\"p-4 bg-gray-800 rounded-lg shadow-lg h-full flex flex-col\">\r\n            <div className=\"flex justify-between items-center mb-3\">\r\n                <h3 className=\"text-lg font-semibold text-white\">실시간 이벤트 로그 (최신 20개)</h3>\r\n                <div className=\"flex items-center space-x-2\">\r\n                    {lastUpdateTime && (\r\n                        <span className=\"text-xs text-gray-400\">\r\n                            마지막 업데이트: {lastUpdateTime.toLocaleTimeString()}\r\n                        </span>\r\n                    )}\r\n                    <button \r\n                        onClick={handleRefresh}\r\n                        className=\"px-3 py-1 bg-blue-600 hover:bg-blue-700 text-white text-sm rounded transition-colors\"\r\n                    >\r\n                        새로고침\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            \r\n            {/* 고정 높이 및 스크롤 기능 */}\r\n            <div className=\"space-y-2 overflow-y-auto flex-grow h-96 pr-2\">\r\n                {isLoading ? (\r\n                    <div className=\"text-center py-8\">\r\n                        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-white mx-auto\"></div>\r\n                        <p className=\"text-gray-400 mt-2\">이벤트 로딩 중...</p>\r\n                    </div>\r\n                ) : events.length > 0 ? (\r\n                    events.map((event) => (\r\n                        <div \r\n                            key={`${event.id}-${event.timestamp}`} \r\n                            className=\"p-3 bg-gray-700 rounded-lg flex items-center space-x-3 cursor-pointer hover:bg-gray-600 transition-colors\"\r\n                            onClick={() => onOpenFull && onOpenFull(event)}\r\n                        >\r\n                            <EventIcon type={event.detected_object} />\r\n                            <div className=\"flex-grow overflow-hidden\">\r\n                                <div className=\"flex justify-between items-baseline\">\r\n                                    <p className=\"font-bold text-white capitalize truncate\">{event.detected_object}</p>\r\n                                    {/* 신뢰도 포맷팅 (소수점 1자리) */}\r\n                                    <p className=\"text-xs font-mono text-gray-300\">{(parseFloat(event.confidence) * 100).toFixed(1)}%</p>\r\n                                </div>\r\n                                <ConfidenceGauge value={event.confidence} />\r\n                                <div className=\"flex justify-between items-center\">\r\n                                    {/* 카메라 정보 표시 */}\r\n                                    <p className=\"text-xs text-gray-400 mt-1 truncate\">{event.camera_name}</p>\r\n                                    <p className=\"text-xs text-gray-400 mt-1 flex-shrink-0\">{new Date(event.timestamp).toLocaleTimeString()}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <div className=\"text-center py-8\">\r\n                        <p className=\"text-gray-500\">표시할 이벤트가 없습니다.</p>\r\n                        <p className=\"text-xs text-gray-600 mt-2\">실시간 이벤트가 발생하면 여기에 표시됩니다.</p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            \r\n            {/* 디버깅 정보 */}\r\n            <div className=\"mt-2 text-xs text-gray-500 space-y-1\">\r\n                <p>총 이벤트 수: {events.length}</p>\r\n                <p>소켓 상태: <span className={isSocketConnected() ? 'text-green-400' : 'text-red-400'}>{socketStatus}</span></p>\r\n                <p>마지막 업데이트: {lastUpdateTime ? lastUpdateTime.toLocaleTimeString() : '없음'}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EventLog;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}