{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project2\\\\DashBoard\\\\ver_2\\\\frontend\\\\src\\\\components\\\\VideoStream.js\",\n  _s = $RefreshSig$();\n// /frontend/src/components/VideoStream.js (수정된 최종본)\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoStream = ({\n  title,\n  frameData,\n  isStreaming,\n  onStreamClick,\n  personDetected\n}) => {\n  _s();\n  const [borderColor, setBorderColor] = useState('border-cyan-500');\n\n  // personDetected 값에 따라 부모 div의 배경 클래스를 동적으로 결정\n  const containerClass = personDetected ? 'bg-blink' // 탐지 시: 깜빡임 애니메이션 배경\n  : 'bg-gray-800'; // 평상시: 일반 배경\n\n  const borderClass = personDetected ? 'border-red-500' : 'border-cyan-500';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `p-4 rounded-lg shadow-lg cursor-pointer ${containerClass}`,\n    onClick: onStreamClick,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-2 text-white\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `bg-black rounded-md aspect-video flex items-center justify-center transition-colors border-2 ${borderClass}`,\n      children: frameData ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `data:image/jpeg;base64,${frameData}`,\n        alt: \"Video Stream\",\n        className: \"w-full h-auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: isStreaming ? \"서버로부터 영상 수신 대기 중...\" : \"스트리밍이 중지되었습니다.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoStream, \"nW7rSkr9NYf+EVxxuIhCKjHokY4=\");\n_c = VideoStream;\nexport default VideoStream;\nvar _c;\n$RefreshReg$(_c, \"VideoStream\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","VideoStream","title","frameData","isStreaming","onStreamClick","personDetected","_s","borderColor","setBorderColor","containerClass","borderClass","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["D:/Project2/DashBoard/ver_2/frontend/src/components/VideoStream.js"],"sourcesContent":["// /frontend/src/components/VideoStream.js (수정된 최종본)\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst VideoStream = ({ title, frameData, isStreaming, onStreamClick, personDetected }) => {\r\n  const [borderColor, setBorderColor] = useState('border-cyan-500');\r\n\r\n  // personDetected 값에 따라 부모 div의 배경 클래스를 동적으로 결정\r\n  const containerClass = personDetected\r\n    ? 'bg-blink' // 탐지 시: 깜빡임 애니메이션 배경\r\n    : 'bg-gray-800'; // 평상시: 일반 배경\r\n\r\n  const borderClass = personDetected ? 'border-red-500' : 'border-cyan-500';\r\n\r\n  return (\r\n    <div className={`p-4 rounded-lg shadow-lg cursor-pointer ${containerClass}`} onClick={onStreamClick}>\r\n      <h2 className=\"text-xl font-semibold mb-2 text-white\">{title}</h2>\r\n      <div\r\n        className={`bg-black rounded-md aspect-video flex items-center justify-center transition-colors border-2 ${borderClass}`}\r\n      >\r\n        {frameData ? (\r\n          <img src={`data:image/jpeg;base64,${frameData}`} alt=\"Video Stream\" className=\"w-full h-auto\" />\r\n        ) : (\r\n          <p className=\"text-gray-500\">{isStreaming ? \"서버로부터 영상 수신 대기 중...\" : \"스트리밍이 중지되었습니다.\"}</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoStream;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAC;EAAEC,KAAK;EAAEC,SAAS;EAAEC,WAAW;EAAEC,aAAa;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACxF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,iBAAiB,CAAC;;EAEjE;EACA,MAAMa,cAAc,GAAGJ,cAAc,GACjC,UAAU,CAAC;EAAA,EACX,aAAa,CAAC,CAAC;;EAEnB,MAAMK,WAAW,GAAGL,cAAc,GAAG,gBAAgB,GAAG,iBAAiB;EAEzE,oBACEN,OAAA;IAAKY,SAAS,EAAE,2CAA2CF,cAAc,EAAG;IAACG,OAAO,EAAER,aAAc;IAAAS,QAAA,gBAClGd,OAAA;MAAIY,SAAS,EAAC,uCAAuC;MAAAE,QAAA,EAAEZ;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAClElB,OAAA;MACEY,SAAS,EAAE,gGAAgGD,WAAW,EAAG;MAAAG,QAAA,EAExHX,SAAS,gBACRH,OAAA;QAAKmB,GAAG,EAAE,0BAA0BhB,SAAS,EAAG;QAACiB,GAAG,EAAC,cAAc;QAACR,SAAS,EAAC;MAAe;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAEhGlB,OAAA;QAAGY,SAAS,EAAC,eAAe;QAAAE,QAAA,EAAEV,WAAW,GAAG,qBAAqB,GAAG;MAAgB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IACzF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACX,EAAA,CAxBIN,WAAW;AAAAoB,EAAA,GAAXpB,WAAW;AA0BjB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}