{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project2\\\\DashBoard\\\\frontend\\\\src\\\\components\\\\AdminRoute.js\",\n  _s = $RefreshSig$();\n// src/components/AdminRoute.js\nimport React, { useContext } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport AuthContext from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    user,\n    loading\n  } = useContext(AuthContext);\n  const location = useLocation();\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n  if (!user || user.role !== 'admin') {\n    alert('관리자만 접근할 수 있는 페이지입니다.');\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_s(AdminRoute, \"tB7A/o7CBMQOqZUvat21Jk5Wn20=\", false, function () {\n  return [useLocation];\n});\n_c = AdminRoute;\nexport default AdminRoute;\nvar _c;\n$RefreshReg$(_c, \"AdminRoute\");","map":{"version":3,"names":["React","useContext","Navigate","useLocation","AuthContext","jsxDEV","_jsxDEV","AdminRoute","children","_s","user","loading","location","fileName","_jsxFileName","lineNumber","columnNumber","role","alert","to","state","from","replace","_c","$RefreshReg$"],"sources":["D:/Project2/DashBoard/frontend/src/components/AdminRoute.js"],"sourcesContent":["// src/components/AdminRoute.js\r\nimport React, { useContext } from 'react';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\nimport AuthContext from '../context/AuthContext';\r\n\r\nconst AdminRoute = ({ children }) => {\r\n  const { user, loading } = useContext(AuthContext);\r\n  const location = useLocation();\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (!user || user.role !== 'admin') {\r\n    alert('관리자만 접근할 수 있는 페이지입니다.');\r\n    return <Navigate to=\"/\" state={{ from: location }} replace />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default AdminRoute;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,OAAOC,WAAW,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGV,UAAU,CAACG,WAAW,CAAC;EACjD,MAAMQ,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,IAAIQ,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAE,QAAA,EAAK;IAAU;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,IAAI,CAACN,IAAI,IAAIA,IAAI,CAACO,IAAI,KAAK,OAAO,EAAE;IAClCC,KAAK,CAAC,uBAAuB,CAAC;IAC9B,oBAAOZ,OAAA,CAACJ,QAAQ;MAACiB,EAAE,EAAC,GAAG;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAET;MAAS,CAAE;MAACU,OAAO;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC/D;EAEA,OAAOR,QAAQ;AACjB,CAAC;AAACC,EAAA,CAdIF,UAAU;EAAA,QAEGJ,WAAW;AAAA;AAAAoB,EAAA,GAFxBhB,UAAU;AAgBhB,eAAeA,UAAU;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}