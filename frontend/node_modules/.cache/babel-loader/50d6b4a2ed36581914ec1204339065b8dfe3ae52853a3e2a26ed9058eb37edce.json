{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project2\\\\DashBoard\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// src/components/Dashboard.js\nimport React, { useEffect, useState, useCallback, useMemo, useRef } from 'react';\nimport VideoStream from './VideoStream';\nimport EventLog from './EventLog';\nimport TestModePanel from './TestModePanel';\nimport FullscreenViewer from './FullscreenViewer';\nimport EventDetailViewer from './EventDetailViewer';\nimport { initSocket, disconnectSocket, subscribeToEvent, sendEvent } from '../services/socket';\nimport alertSound from '../assets/alarm.mp3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  var _liveFrames$, _liveFrames$2, _liveFrames$viewer$ca;\n  const [serverMessage, setServerMessage] = useState('');\n  const [mode, setMode] = useState('live');\n\n  // 카메라가 1대라면 [0], 2대면 [0,1]로 변경\n  const cameraIds = useMemo(() => [0], []);\n\n  // 프레임/상태\n  const [liveFrames, setLiveFrames] = useState({\n    0: {\n      rgb: null,\n      tir: null\n    }\n  });\n  const [isStreaming, setIsStreaming] = useState({\n    0: false\n  });\n  const [personDetected, setPersonDetected] = useState({\n    0: false\n  });\n\n  // ✅ 모달 상태: 스냅샷이 아니라 \"선택 정보\"만 저장\n  // { cameraId, stream: 'rgb' | 'tir', title }\n  const [viewer, setViewer] = useState(null);\n  const openViewer = (cameraId, stream, title) => setViewer({\n    cameraId,\n    stream,\n    title\n  });\n  const closeViewer = () => setViewer(null);\n\n  // 전체 화면 이벤트 뷰어 상태\n  const [fullViewEvent, setFullViewEvent] = useState(null);\n  const handleOpenFullEvent = event => setFullViewEvent(event);\n  const handleCloseFullEvent = () => setFullViewEvent(null);\n  const audioRef = useRef(null);\n\n  // 소켓 연결 1회\n  useEffect(() => {\n    initSocket();\n    subscribeToEvent('response', data => setServerMessage(data.message));\n    subscribeToEvent('video_frame', data => {\n      if (typeof data.camera_id === 'number') {\n        setLiveFrames(prev => ({\n          ...prev,\n          [data.camera_id]: {\n            rgb: data.rgb,\n            tir: data.tir\n          }\n        }));\n        setPersonDetected(prev => ({\n          ...prev,\n          [data.camera_id]: data.person_detected\n        }));\n      }\n    });\n    return () => disconnectSocket();\n  }, []);\n\n  // 스트림 제어\n  const startAllStreams = useCallback(() => {\n    cameraIds.forEach(id => {\n      sendEvent('start_stream', {\n        camera_id: id\n      });\n      setIsStreaming(p => ({\n        ...p,\n        [id]: true\n      }));\n    });\n  }, [cameraIds]);\n  const stopAllStreams = useCallback(() => {\n    cameraIds.forEach(id => sendEvent('stop_stream', {\n      camera_id: id\n    }));\n    setIsStreaming({\n      0: false\n    });\n    setLiveFrames({\n      0: {\n        rgb: null,\n        tir: null\n      }\n    });\n    setPersonDetected({\n      0: false\n    });\n  }, [cameraIds]);\n\n  // 모드 변경에 따라 시작/정지\n  useEffect(() => {\n    if (mode === 'live') startAllStreams();\n    return () => stopAllStreams();\n  }, [mode, startAllStreams, stopAllStreams]);\n\n  // 알람음 (옵션)\n  useEffect(() => {\n    if (personDetected[0] && audioRef.current) {\n      audioRef.current.play().catch(() => {});\n    }\n  }, [personDetected]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center space-x-4 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setMode('live'),\n        className: `px-6 py-2 font-bold text-white rounded-lg transition-colors ${mode === 'live' ? 'bg-cyan-600' : 'bg-gray-600 hover:bg-gray-700'}`,\n        children: \"\\uC2E4\\uC2DC\\uAC04 \\uB2E4\\uC911 \\uAC10\\uC2DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setMode('test'),\n        className: `px-6 py-2 font-bold text-white rounded-lg transition-colors ${mode === 'test' ? 'bg-cyan-600' : 'bg-gray-600 hover:bg-gray-700'}`,\n        children: \"\\uC2DC\\uD5D8 \\uC601\\uC0C1 \\uBD84\\uC11D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 lg:grid-cols-3 gap-6 lg:items-start\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lg:col-span-2 space-y-6\",\n        children: mode === 'live' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(VideoStream, {\n            title: \"\\uCE74\\uBA54\\uB77C 1 - RGB\",\n            frameData: (_liveFrames$ = liveFrames[0]) === null || _liveFrames$ === void 0 ? void 0 : _liveFrames$.rgb,\n            isStreaming: isStreaming[0],\n            onStreamClick: () => openViewer(0, 'rgb', '카메라 1 - RGB'),\n            personDetected: personDetected[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(VideoStream, {\n            title: \"\\uCE74\\uBA54\\uB77C 1 - TIR\",\n            frameData: (_liveFrames$2 = liveFrames[0]) === null || _liveFrames$2 === void 0 ? void 0 : _liveFrames$2.tir,\n            isStreaming: isStreaming[0],\n            onStreamClick: () => openViewer(0, 'tir', '카메라 1 - TIR'),\n            personDetected: personDetected[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(TestModePanel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-6 h-full\",\n        children: [serverMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 bg-blue-900 rounded-lg text-center mb-4\",\n          children: serverMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(EventLog, {\n          onOpenFull: handleOpenFullEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), viewer && /*#__PURE__*/_jsxDEV(FullscreenViewer, {\n      title: viewer.title,\n      frameData: (_liveFrames$viewer$ca = liveFrames[viewer.cameraId]) === null || _liveFrames$viewer$ca === void 0 ? void 0 : _liveFrames$viewer$ca[viewer.stream],\n      onClose: closeViewer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this), fullViewEvent && /*#__PURE__*/_jsxDEV(EventDetailViewer, {\n      event: fullViewEvent,\n      onClose: handleCloseFullEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: alertSound\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"B18Zk4ltvrMcvScdFhu99YGyXKI=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","useMemo","useRef","VideoStream","EventLog","TestModePanel","FullscreenViewer","EventDetailViewer","initSocket","disconnectSocket","subscribeToEvent","sendEvent","alertSound","jsxDEV","_jsxDEV","Dashboard","_s","_liveFrames$","_liveFrames$2","_liveFrames$viewer$ca","serverMessage","setServerMessage","mode","setMode","cameraIds","liveFrames","setLiveFrames","rgb","tir","isStreaming","setIsStreaming","personDetected","setPersonDetected","viewer","setViewer","openViewer","cameraId","stream","title","closeViewer","fullViewEvent","setFullViewEvent","handleOpenFullEvent","event","handleCloseFullEvent","audioRef","data","message","camera_id","prev","person_detected","startAllStreams","forEach","id","p","stopAllStreams","current","play","catch","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","frameData","onStreamClick","onOpenFull","onClose","ref","src","_c","$RefreshReg$"],"sources":["D:/Project2/DashBoard/frontend/src/components/Dashboard.js"],"sourcesContent":["// src/components/Dashboard.js\r\nimport React, { useEffect, useState, useCallback, useMemo, useRef } from 'react';\r\nimport VideoStream from './VideoStream';\r\nimport EventLog from './EventLog';\r\nimport TestModePanel from './TestModePanel';\r\nimport FullscreenViewer from './FullscreenViewer';\r\nimport EventDetailViewer from './EventDetailViewer';\r\nimport { initSocket, disconnectSocket, subscribeToEvent, sendEvent } from '../services/socket';\r\nimport alertSound from '../assets/alarm.mp3';\r\n\r\nconst Dashboard = () => {\r\n  const [serverMessage, setServerMessage] = useState('');\r\n  const [mode, setMode] = useState('live');\r\n\r\n  // 카메라가 1대라면 [0], 2대면 [0,1]로 변경\r\n  const cameraIds = useMemo(() => [0], []);\r\n\r\n  // 프레임/상태\r\n  const [liveFrames, setLiveFrames] = useState({ 0: { rgb: null, tir: null } });\r\n  const [isStreaming, setIsStreaming] = useState({ 0: false });\r\n  const [personDetected, setPersonDetected] = useState({ 0: false });\r\n\r\n  // ✅ 모달 상태: 스냅샷이 아니라 \"선택 정보\"만 저장\r\n  // { cameraId, stream: 'rgb' | 'tir', title }\r\n  const [viewer, setViewer] = useState(null);\r\n  const openViewer = (cameraId, stream, title) => setViewer({ cameraId, stream, title });\r\n  const closeViewer = () => setViewer(null);\r\n\r\n  // 전체 화면 이벤트 뷰어 상태\r\n  const [fullViewEvent, setFullViewEvent] = useState(null);\r\n  const handleOpenFullEvent = (event) => setFullViewEvent(event);\r\n  const handleCloseFullEvent = () => setFullViewEvent(null);\r\n\r\n  const audioRef = useRef(null);\r\n\r\n  // 소켓 연결 1회\r\n  useEffect(() => {\r\n    initSocket();\r\n\r\n    subscribeToEvent('response', (data) => setServerMessage(data.message));\r\n\r\n    subscribeToEvent('video_frame', (data) => {\r\n      if (typeof data.camera_id === 'number') {\r\n        setLiveFrames((prev) => ({\r\n          ...prev,\r\n          [data.camera_id]: { rgb: data.rgb, tir: data.tir },\r\n        }));\r\n        setPersonDetected((prev) => ({ ...prev, [data.camera_id]: data.person_detected }));\r\n      }\r\n    });\r\n\r\n    return () => disconnectSocket();\r\n  }, []);\r\n\r\n  // 스트림 제어\r\n  const startAllStreams = useCallback(() => {\r\n    cameraIds.forEach((id) => {\r\n      sendEvent('start_stream', { camera_id: id });\r\n      setIsStreaming((p) => ({ ...p, [id]: true }));\r\n    });\r\n  }, [cameraIds]);\r\n\r\n  const stopAllStreams = useCallback(() => {\r\n    cameraIds.forEach((id) => sendEvent('stop_stream', { camera_id: id }));\r\n    setIsStreaming({ 0: false });\r\n    setLiveFrames({ 0: { rgb: null, tir: null } });\r\n    setPersonDetected({ 0: false });\r\n  }, [cameraIds]);\r\n\r\n  // 모드 변경에 따라 시작/정지\r\n  useEffect(() => {\r\n    if (mode === 'live') startAllStreams();\r\n    return () => stopAllStreams();\r\n  }, [mode, startAllStreams, stopAllStreams]);\r\n\r\n  // 알람음 (옵션)\r\n  useEffect(() => {\r\n    if (personDetected[0] && audioRef.current) {\r\n      audioRef.current.play().catch(() => {});\r\n    }\r\n  }, [personDetected]);\r\n\r\n  return (\r\n    <div>\r\n      {/* 상단 모드 토글 */}\r\n      <div className=\"flex justify-center space-x-4 mb-4\">\r\n        <button\r\n          onClick={() => setMode('live')}\r\n          className={`px-6 py-2 font-bold text-white rounded-lg transition-colors ${\r\n            mode === 'live' ? 'bg-cyan-600' : 'bg-gray-600 hover:bg-gray-700'\r\n          }`}\r\n        >\r\n          실시간 다중 감시\r\n        </button>\r\n        <button\r\n          onClick={() => setMode('test')}\r\n          className={`px-6 py-2 font-bold text-white rounded-lg transition-colors ${\r\n            mode === 'test' ? 'bg-cyan-600' : 'bg-gray-600 hover:bg-gray-700'\r\n          }`}\r\n        >\r\n          시험 영상 분석\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 lg:items-start\">\r\n        <div className=\"lg:col-span-2 space-y-6\">\r\n          {mode === 'live' ? (\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <VideoStream\r\n                title=\"카메라 1 - RGB\"\r\n                frameData={liveFrames[0]?.rgb}\r\n                isStreaming={isStreaming[0]}\r\n                onStreamClick={() => openViewer(0, 'rgb', '카메라 1 - RGB')}\r\n                personDetected={personDetected[0]}\r\n              />\r\n              <VideoStream\r\n                title=\"카메라 1 - TIR\"\r\n                frameData={liveFrames[0]?.tir}\r\n                isStreaming={isStreaming[0]}\r\n                onStreamClick={() => openViewer(0, 'tir', '카메라 1 - TIR')}\r\n                personDetected={personDetected[0]}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <TestModePanel />\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"space-y-6 h-full\">\r\n          {serverMessage && (\r\n            <div className=\"p-4 bg-blue-900 rounded-lg text-center mb-4\">{serverMessage}</div>\r\n          )}\r\n          <EventLog onOpenFull={handleOpenFullEvent} />\r\n        </div>\r\n      </div>\r\n\r\n      {/* ✅ 모달: 현재 liveFrames에서 프레임을 꺼내 전달 → 실시간 갱신 */}\r\n      {viewer && (\r\n        <FullscreenViewer\r\n          title={viewer.title}\r\n          frameData={liveFrames[viewer.cameraId]?.[viewer.stream]}\r\n          onClose={closeViewer}\r\n        />\r\n      )}\r\n\r\n      {/* 이벤트 상세 뷰어 렌더링 */}\r\n      {fullViewEvent && (\r\n        <EventDetailViewer event={fullViewEvent} onClose={handleCloseFullEvent} />\r\n      )}\r\n\r\n      <audio ref={audioRef} src={alertSound} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}