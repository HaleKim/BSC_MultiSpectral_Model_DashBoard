{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project2\\\\DashBoard\\\\ver_2\\\\frontend\\\\src\\\\components\\\\VideoStream.js\",\n  _s = $RefreshSig$();\n// /frontend/src/components/VideoStream.js (수정된 최종본)\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoStream = ({\n  title,\n  frameData,\n  isStreaming,\n  onStreamClick,\n  personDetected\n}) => {\n  _s();\n  const [borderColor, setBorderColor] = useState('border-cyan-500');\n  useEffect(() => {\n    let intervalId;\n    if (personDetected) {\n      // 0.5초 간격으로 빨간색과 노란색을 번갈아 설정\n      intervalId = setInterval(() => {\n        setBorderColor(prevColor => prevColor === 'border-red-500' ? 'border-yellow-500' : 'border-red-500');\n      }, 500);\n    } else {\n      // 탐지가 없으면 원래 청록색으로 복원\n      setBorderColor('border-cyan-500');\n    }\n\n    // 컴포넌트가 사라지거나 personDetected가 false가 되면 인터벌 정리\n    return () => clearInterval(intervalId);\n  }, [personDetected]);\n  const borderWidthClass = personDetected ? 'border-4' : 'border-2';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 bg-gray-800 rounded-lg shadow-lg cursor-pointer\",\n    onClick: onStreamClick,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-2 text-white\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `bg-black rounded-md aspect-video flex items-center justify-center transition-all duration-100 ${borderWidthClass} ${borderColor}`,\n      children: frameData ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `data:image/jpeg;base64,${frameData}`,\n        alt: \"Video Stream\",\n        className: \"w-full h-auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: isStreaming ? \"서버로부터 영상 수신 대기 중...\" : \"스트리밍이 중지되었습니다.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoStream, \"+9EHy4IlTqsbhIeYFSvgOYeVocg=\");\n_c = VideoStream;\nexport default VideoStream;\nvar _c;\n$RefreshReg$(_c, \"VideoStream\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","VideoStream","title","frameData","isStreaming","onStreamClick","personDetected","_s","borderColor","setBorderColor","intervalId","setInterval","prevColor","clearInterval","borderWidthClass","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["D:/Project2/DashBoard/ver_2/frontend/src/components/VideoStream.js"],"sourcesContent":["// /frontend/src/components/VideoStream.js (수정된 최종본)\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst VideoStream = ({ title, frameData, isStreaming, onStreamClick, personDetected }) => {\r\n  const [borderColor, setBorderColor] = useState('border-cyan-500');\r\n\r\n  useEffect(() => {\r\n    let intervalId;\r\n    if (personDetected) {\r\n      // 0.5초 간격으로 빨간색과 노란색을 번갈아 설정\r\n      intervalId = setInterval(() => {\r\n        setBorderColor(prevColor => \r\n          prevColor === 'border-red-500' ? 'border-yellow-500' : 'border-red-500'\r\n        );\r\n      }, 500);\r\n    } else {\r\n      // 탐지가 없으면 원래 청록색으로 복원\r\n      setBorderColor('border-cyan-500');\r\n    }\r\n\r\n    // 컴포넌트가 사라지거나 personDetected가 false가 되면 인터벌 정리\r\n    return () => clearInterval(intervalId);\r\n  }, [personDetected]);\r\n\r\n  const borderWidthClass = personDetected ? 'border-4' : 'border-2';\r\n\r\n  return (\r\n    <div className=\"p-4 bg-gray-800 rounded-lg shadow-lg cursor-pointer\" onClick={onStreamClick}>\r\n      <h2 className=\"text-xl font-semibold mb-2 text-white\">{title}</h2>\r\n      <div\r\n        className={`bg-black rounded-md aspect-video flex items-center justify-center transition-all duration-100 ${borderWidthClass} ${borderColor}`}\r\n      >\r\n        {frameData ? (\r\n          <img src={`data:image/jpeg;base64,${frameData}`} alt=\"Video Stream\" className=\"w-full h-auto\" />\r\n        ) : (\r\n          <p className=\"text-gray-500\">{isStreaming ? \"서버로부터 영상 수신 대기 중...\" : \"스트리밍이 중지되었습니다.\"}</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoStream;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAC;EAAEC,KAAK;EAAEC,SAAS;EAAEC,WAAW;EAAEC,aAAa;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACxF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,iBAAiB,CAAC;EAEjEC,SAAS,CAAC,MAAM;IACd,IAAIY,UAAU;IACd,IAAIJ,cAAc,EAAE;MAClB;MACAI,UAAU,GAAGC,WAAW,CAAC,MAAM;QAC7BF,cAAc,CAACG,SAAS,IACtBA,SAAS,KAAK,gBAAgB,GAAG,mBAAmB,GAAG,gBACzD,CAAC;MACH,CAAC,EAAE,GAAG,CAAC;IACT,CAAC,MAAM;MACL;MACAH,cAAc,CAAC,iBAAiB,CAAC;IACnC;;IAEA;IACA,OAAO,MAAMI,aAAa,CAACH,UAAU,CAAC;EACxC,CAAC,EAAE,CAACJ,cAAc,CAAC,CAAC;EAEpB,MAAMQ,gBAAgB,GAAGR,cAAc,GAAG,UAAU,GAAG,UAAU;EAEjE,oBACEN,OAAA;IAAKe,SAAS,EAAC,qDAAqD;IAACC,OAAO,EAAEX,aAAc;IAAAY,QAAA,gBAC1FjB,OAAA;MAAIe,SAAS,EAAC,uCAAuC;MAAAE,QAAA,EAAEf;IAAK;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAClErB,OAAA;MACEe,SAAS,EAAE,iGAAiGD,gBAAgB,IAAIN,WAAW,EAAG;MAAAS,QAAA,EAE7Id,SAAS,gBACRH,OAAA;QAAKsB,GAAG,EAAE,0BAA0BnB,SAAS,EAAG;QAACoB,GAAG,EAAC,cAAc;QAACR,SAAS,EAAC;MAAe;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAEhGrB,OAAA;QAAGe,SAAS,EAAC,eAAe;QAAAE,QAAA,EAAEb,WAAW,GAAG,qBAAqB,GAAG;MAAgB;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IACzF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACd,EAAA,CArCIN,WAAW;AAAAuB,EAAA,GAAXvB,WAAW;AAuCjB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}