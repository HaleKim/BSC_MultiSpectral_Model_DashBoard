{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project2\\\\DashBoard\\\\ver.2\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// /frontend/src/components/Dashboard.js (수정된 최종본)\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport VideoStream from './VideoStream';\nimport EventLog from './EventLog';\nimport TestModePanel from './TestModePanel';\nimport { initSocket, disconnectSocket, subscribeToEvent, sendEvent } from '../services/socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [serverMessage, setServerMessage] = useState('');\n  const [mode, setMode] = useState('live');\n\n  // 수정: 여러 카메라의 프레임과 스트리밍 상태를 객체로 관리\n  const [liveFrames, setLiveFrames] = useState({\n    0: null,\n    1: null,\n    2: null,\n    3: null\n  });\n  const [isStreaming, setIsStreaming] = useState({\n    0: false,\n    1: false,\n    2: false,\n    3: false\n  });\n  const cameraIds = [0, 1]; // 실제 사용할 카메라 ID 목록\n\n  const startAllStreams = useCallback(() => {\n    cameraIds.forEach(id => {\n      sendEvent('start_stream', {\n        camera_id: id\n      });\n      setIsStreaming(prev => ({\n        ...prev,\n        [id]: true\n      }));\n    });\n  }, [cameraIds]);\n  const stopAllStreams = useCallback(() => {\n    cameraIds.forEach(id => {\n      sendEvent('stop_stream', {\n        camera_id: id\n      });\n    });\n    // 상태 초기화\n    setIsStreaming({\n      0: false,\n      1: false,\n      2: false,\n      3: false\n    });\n    setLiveFrames({\n      0: null,\n      1: null,\n      2: null,\n      3: null\n    });\n  }, [cameraIds]);\n  useEffect(() => {\n    initSocket();\n    subscribeToEvent('response', data => {\n      setServerMessage(data.message);\n    });\n\n    // 수정: video_frame 이벤트 핸들러가 camera_id를 기준으로 프레임 상태 업데이트\n    subscribeToEvent('video_frame', data => {\n      if (data.camera_id !== 'test_video') {\n        setLiveFrames(prev => ({\n          ...prev,\n          [data.camera_id]: data.image\n        }));\n      }\n    });\n\n    // 'live' 모드일 때 모든 스트림 시작\n    if (mode === 'live') {\n      startAllStreams();\n    }\n    return () => {\n      stopAllStreams();\n      disconnectSocket();\n    };\n  }, [mode, startAllStreams, stopAllStreams]);\n  const handleModeChange = newMode => {\n    setMode(newMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center space-x-4 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleModeChange('live'),\n        className: `px-6 py-2 font-bold text-white rounded-lg transition-colors ${mode === 'live' ? 'bg-cyan-600' : 'bg-gray-600 hover:bg-gray-700'}`,\n        children: \"\\uC2E4\\uC2DC\\uAC04 \\uB2E4\\uC911 \\uAC10\\uC2DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleModeChange('test'),\n        className: `px-6 py-2 font-bold text-white rounded-lg transition-colors ${mode === 'test' ? 'bg-cyan-600' : 'bg-gray-600 hover:bg-gray-700'}`,\n        children: \"\\uC2DC\\uD5D8 \\uC601\\uC0C1 \\uBD84\\uC11D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 lg:grid-cols-3 gap-6 lg:items-start\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lg:col-span-2 space-y-6\",\n        children: mode === 'live' ?\n        /*#__PURE__*/\n        // 수정: 4분할 화면 레이아웃\n        _jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(VideoStream, {\n            title: \"\\uCE74\\uBA54\\uB77C 1 - RGB/TIR\",\n            frameData: liveFrames[0],\n            isStreaming: isStreaming[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(VideoStream, {\n            title: \"\\uCE74\\uBA54\\uB77C 1 - \\uBD84\\uC11D \\uACB0\\uACFC\",\n            frameData: liveFrames[0],\n            isStreaming: isStreaming[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(VideoStream, {\n            title: \"\\uCE74\\uBA54\\uB77C 2 - RGB/TIR\",\n            frameData: liveFrames[1],\n            isStreaming: isStreaming[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(VideoStream, {\n            title: \"\\uCE74\\uBA54\\uB77C 2 - \\uBD84\\uC11D \\uACB0\\uACFC\",\n            frameData: liveFrames[1],\n            isStreaming: isStreaming[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this) :\n        /*#__PURE__*/\n        // 시험 영상 분석 모드는 2분할(RGB/TIR)된 하나의 영상을 보여줍니다.\n        _jsxDEV(TestModePanel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-6 h-full\",\n        children: [serverMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 bg-blue-900 rounded-lg text-center mb-4\",\n          children: serverMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(EventLog, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"eNQ5/vWOzd0A+6dBfAj6AQBB320=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","VideoStream","EventLog","TestModePanel","initSocket","disconnectSocket","subscribeToEvent","sendEvent","jsxDEV","_jsxDEV","Dashboard","_s","serverMessage","setServerMessage","mode","setMode","liveFrames","setLiveFrames","isStreaming","setIsStreaming","cameraIds","startAllStreams","forEach","id","camera_id","prev","stopAllStreams","data","message","image","handleModeChange","newMode","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","title","frameData","_c","$RefreshReg$"],"sources":["D:/Project2/DashBoard/ver.2/frontend/src/components/Dashboard.js"],"sourcesContent":["// /frontend/src/components/Dashboard.js (수정된 최종본)\r\n\r\nimport React, { useEffect, useState, useCallback } from 'react';\r\nimport VideoStream from './VideoStream';\r\nimport EventLog from './EventLog';\r\nimport TestModePanel from './TestModePanel';\r\nimport { initSocket, disconnectSocket, subscribeToEvent, sendEvent } from '../services/socket';\r\n\r\nconst Dashboard = () => {\r\n  const [serverMessage, setServerMessage] = useState('');\r\n  const [mode, setMode] = useState('live');\r\n\r\n  // 수정: 여러 카메라의 프레임과 스트리밍 상태를 객체로 관리\r\n  const [liveFrames, setLiveFrames] = useState({ 0: null, 1: null, 2: null, 3: null });\r\n  const [isStreaming, setIsStreaming] = useState({ 0: false, 1: false, 2: false, 3: false });\r\n  const cameraIds = [0, 1]; // 실제 사용할 카메라 ID 목록\r\n\r\n  const startAllStreams = useCallback(() => {\r\n    cameraIds.forEach(id => {\r\n      sendEvent('start_stream', { camera_id: id });\r\n      setIsStreaming(prev => ({ ...prev, [id]: true }));\r\n    });\r\n  }, [cameraIds]);\r\n\r\n  const stopAllStreams = useCallback(() => {\r\n    cameraIds.forEach(id => {\r\n      sendEvent('stop_stream', { camera_id: id });\r\n    });\r\n    // 상태 초기화\r\n    setIsStreaming({ 0: false, 1: false, 2: false, 3: false });\r\n    setLiveFrames({ 0: null, 1: null, 2: null, 3: null });\r\n  }, [cameraIds]);\r\n\r\n  useEffect(() => {\r\n    initSocket();\r\n    subscribeToEvent('response', (data) => {\r\n      setServerMessage(data.message);\r\n    });\r\n\r\n    // 수정: video_frame 이벤트 핸들러가 camera_id를 기준으로 프레임 상태 업데이트\r\n    subscribeToEvent('video_frame', (data) => {\r\n      if (data.camera_id !== 'test_video') {\r\n        setLiveFrames(prev => ({ ...prev, [data.camera_id]: data.image }));\r\n      }\r\n    });\r\n\r\n    // 'live' 모드일 때 모든 스트림 시작\r\n    if (mode === 'live') {\r\n      startAllStreams();\r\n    }\r\n\r\n    return () => {\r\n      stopAllStreams();\r\n      disconnectSocket();\r\n    };\r\n  }, [mode, startAllStreams, stopAllStreams]);\r\n\r\n  const handleModeChange = (newMode) => {\r\n    setMode(newMode);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex justify-center space-x-4 mb-4\">\r\n        <button\r\n          onClick={() => handleModeChange('live')}\r\n          className={`px-6 py-2 font-bold text-white rounded-lg transition-colors ${mode === 'live' ? 'bg-cyan-600' : 'bg-gray-600 hover:bg-gray-700'}`}>\r\n          실시간 다중 감시\r\n        </button>\r\n        <button\r\n          onClick={() => handleModeChange('test')}\r\n          className={`px-6 py-2 font-bold text-white rounded-lg transition-colors ${mode === 'test' ? 'bg-cyan-600' : 'bg-gray-600 hover:bg-gray-700'}`}>\r\n          시험 영상 분석\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 lg:items-start\">\r\n        <div className=\"lg:col-span-2 space-y-6\">\r\n          {mode === 'live' ? (\r\n            // 수정: 4분할 화면 레이아웃\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <VideoStream title=\"카메라 1 - RGB/TIR\" frameData={liveFrames[0]} isStreaming={isStreaming[0]} />\r\n              <VideoStream title=\"카메라 1 - 분석 결과\" frameData={liveFrames[0]} isStreaming={isStreaming[0]} />\r\n              <VideoStream title=\"카메라 2 - RGB/TIR\" frameData={liveFrames[1]} isStreaming={isStreaming[1]} />\r\n              <VideoStream title=\"카메라 2 - 분석 결과\" frameData={liveFrames[1]} isStreaming={isStreaming[1]} />\r\n            </div>\r\n          ) : (\r\n            // 시험 영상 분석 모드는 2분할(RGB/TIR)된 하나의 영상을 보여줍니다.\r\n            <TestModePanel />\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"space-y-6 h-full\">\r\n          {serverMessage && <div className=\"p-4 bg-blue-900 rounded-lg text-center mb-4\">{serverMessage}</div>}\r\n          <EventLog />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}