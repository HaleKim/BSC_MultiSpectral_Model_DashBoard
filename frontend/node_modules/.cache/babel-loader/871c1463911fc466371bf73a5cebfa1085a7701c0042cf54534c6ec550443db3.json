{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project2\\\\DashBoard\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// src/components/Dashboard.js\nimport React, { useEffect, useState, useCallback, useMemo, useRef } from 'react';\nimport VideoStream from './VideoStream';\nimport EventLog from './EventLog';\nimport TestModePanel from './TestModePanel';\nimport FullscreenViewer from './FullscreenViewer';\nimport EventDetailViewer from './EventDetailViewer';\nimport { initSocket, disconnectSocket, subscribeToEvent, sendEvent, getSocket } from '../services/socket';\nimport alertSound from '../assets/alarm.mp3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  var _liveFrames$, _liveFrames$2, _liveFrames$viewer$ca;\n  const [serverMessage, setServerMessage] = useState('');\n  const [mode, setMode] = useState('live');\n\n  // 카메라가 1대라면 [0], 2대면 [0,1]로 변경\n  const cameraIds = useMemo(() => [0], []);\n\n  // 프레임/상태\n  const [liveFrames, setLiveFrames] = useState({\n    0: {\n      rgb: null,\n      tir: null\n    }\n  });\n  const [isStreaming, setIsStreaming] = useState({\n    0: false\n  });\n  const [personDetected, setPersonDetected] = useState({\n    0: false\n  });\n\n  // ✅ 모달 상태: 스냅샷이 아니라 \"선택 정보\"만 저장\n  // { cameraId, stream: 'rgb' | 'tir', title }\n  const [viewer, setViewer] = useState(null);\n  const openViewer = (cameraId, stream, title) => setViewer({\n    cameraId,\n    stream,\n    title\n  });\n  const closeViewer = () => setViewer(null);\n\n  // 전체 화면 이벤트 뷰어 상태\n  const [fullViewEvent, setFullViewEvent] = useState(null);\n  const handleOpenFullEvent = event => setFullViewEvent(event);\n  const handleCloseFullEvent = () => setFullViewEvent(null);\n\n  // 모드 전환 중 상태 (백엔드 호환성을 위해 추가)\n  const [isModeChanging, setIsModeChanging] = useState(false);\n  const audioRef = useRef(null);\n\n  // 소켓 연결/해제 및 이벤트 수신 전용 useEffect\n  useEffect(() => {\n    console.log('Dashboard 컴포넌트 마운트 - 소켓 초기화 시작');\n    initSocket();\n\n    // 서버 응답 메시지 수신\n    subscribeToEvent('response', data => {\n      console.log('서버 응답 수신:', data);\n      setServerMessage(data.message);\n    });\n\n    // 비디오 프레임 수신\n    subscribeToEvent('video_frame', data => {\n      console.log('비디오 프레임 수신:', {\n        camera_id: data.camera_id,\n        has_rgb: !!data.rgb,\n        has_tir: !!data.tir,\n        person_detected: data.person_detected\n      });\n      if (typeof data.camera_id === 'number') {\n        console.log(`카메라 ${data.camera_id} 프레임 처리 중...`);\n        setLiveFrames(prev => ({\n          ...prev,\n          [data.camera_id]: {\n            rgb: data.rgb,\n            tir: data.tir\n          }\n        }));\n        setPersonDetected(prev => ({\n          ...prev,\n          [data.camera_id]: data.person_detected\n        }));\n        console.log(`카메라 ${data.camera_id} 프레임 처리 완료`);\n      } else if (data.camera_id === 'test_video') {\n        console.log('시험 영상 프레임 수신');\n      }\n    });\n\n    // 연결 상태 확인 (백엔드 호환성을 위해 추가)\n    const checkConnection = setInterval(() => {\n      const socket = getSocket();\n      if (socket) {\n        console.log('소켓 연결 상태:', socket.connected, 'ID:', socket.id);\n      }\n    }, 5000);\n    return () => {\n      console.log('Dashboard 컴포넌트 언마운트 - 소켓 정리');\n      clearInterval(checkConnection);\n      disconnectSocket();\n    };\n  }, []);\n\n  // 실시간 스트림 시작 함수 (백엔드 호환성을 위해 복원)\n  const startAllStreams = useCallback(async () => {\n    console.log('실시간 스트림 시작 시도...');\n    setIsModeChanging(true);\n    try {\n      // 소켓 연결 상태 확인\n      const socket = getSocket();\n      if (!socket || !socket.connected) {\n        console.error('소켓이 연결되지 않았습니다. 소켓 초기화를 다시 시도합니다.');\n        initSocket();\n        // 잠시 대기 후 다시 시도\n        await new Promise(resolve => setTimeout(resolve, 1000));\n      }\n\n      // 모든 카메라에 대해 스트림 시작 요청\n      for (const id of cameraIds) {\n        console.log(`카메라 ${id + 1} 스트림 시작 요청`);\n        sendEvent('start_stream', {\n          camera_id: id\n        });\n        setIsStreaming(prev => ({\n          ...prev,\n          [id]: true\n        }));\n      }\n\n      // 스트림 상태 초기화\n      setLiveFrames({\n        0: {\n          rgb: null,\n          tir: null\n        }\n      });\n      setPersonDetected({\n        0: false\n      });\n      console.log('실시간 스트림 시작 완료');\n    } catch (error) {\n      console.error('스트림 시작 오류:', error);\n    } finally {\n      setIsModeChanging(false);\n    }\n  }, [cameraIds]);\n\n  // 모든 스트림을 중지하는 함수 (백엔드 호환성을 위해 복원)\n  const stopAllStreams = useCallback(async () => {\n    console.log('모든 스트림 중지 시도...');\n    setIsModeChanging(true);\n    try {\n      // 모든 카메라에 대해 스트림 중지 요청\n      for (const id of cameraIds) {\n        console.log(`카메라 ${id + 1} 스트림 중지 요청`);\n        sendEvent('stop_stream', {\n          camera_id: id\n        });\n      }\n\n      // 스트림 상태 초기화\n      setIsStreaming({\n        0: false\n      });\n      setLiveFrames({\n        0: {\n          rgb: null,\n          tir: null\n        }\n      });\n      setPersonDetected({\n        0: false\n      });\n      console.log('모든 스트림 중지 완료');\n    } catch (error) {\n      console.error('스트림 중지 오류:', error);\n    } finally {\n      setIsModeChanging(false);\n    }\n  }, [cameraIds]);\n\n  // 모드 변경에 따라 스트림 시작/중지 (백엔드 호환성을 위해 수정)\n  useEffect(() => {\n    if (isModeChanging) return; // 모드 변경 중이면 무시\n\n    if (mode === 'live') {\n      console.log('실시간 모드로 전환 - 스트림 시작');\n      // 실시간 모드로 전환 시 즉시 스트림 시작\n      startAllStreams();\n    } else {\n      console.log('시험 모드로 전환 - 스트림 중지');\n      // 시험 모드로 전환 시 즉시 스트림 중지\n      stopAllStreams();\n    }\n  }, [mode, startAllStreams, stopAllStreams, isModeChanging]);\n\n  // 알람음 (옵션)\n  useEffect(() => {\n    if (personDetected[0] && audioRef.current) {\n      audioRef.current.play().catch(error => console.error(\"오디오 재생 오류:\", error));\n    }\n  }, [personDetected]);\n\n  // 모드 변경 핸들러 (백엔드 호환성을 위해 추가)\n  const handleModeChange = newMode => {\n    if (isModeChanging) return; // 모드 변경 중이면 무시\n\n    console.log(`모드 변경: ${mode} -> ${newMode}`);\n    setMode(newMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center space-x-4 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleModeChange('live'),\n        disabled: isModeChanging,\n        className: `px-6 py-2 font-bold text-white rounded-lg transition-colors ${mode === 'live' ? 'bg-cyan-600' : 'bg-gray-600 hover:bg-gray-700'} ${isModeChanging ? 'opacity-50 cursor-not-allowed' : ''}`,\n        children: isModeChanging && mode === 'live' ? '전환 중...' : '실시간 다중 감시'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleModeChange('test'),\n        disabled: isModeChanging,\n        className: `px-6 py-2 font-bold text-white rounded-lg transition-colors ${mode === 'test' ? 'bg-cyan-600' : 'bg-gray-600 hover:bg-gray-700'} ${isModeChanging ? 'opacity-50 cursor-not-allowed' : ''}`,\n        children: isModeChanging && mode === 'test' ? '전환 중...' : '시험 영상 분석'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), isModeChanging && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mb-4 p-2 bg-blue-900 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-6 w-6 border-b-2 border-white mx-auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-white mt-2\",\n        children: \"\\uBAA8\\uB4DC \\uC804\\uD658 \\uC911...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 lg:grid-cols-3 gap-6 lg:items-start\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lg:col-span-2 space-y-6\",\n        children: mode === 'live' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(VideoStream, {\n            title: \"\\uCE74\\uBA54\\uB77C 1 - RGB\",\n            frameData: (_liveFrames$ = liveFrames[0]) === null || _liveFrames$ === void 0 ? void 0 : _liveFrames$.rgb,\n            isStreaming: isStreaming[0],\n            onStreamClick: () => openViewer(0, 'rgb', '카메라 1 - RGB'),\n            personDetected: personDetected[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(VideoStream, {\n            title: \"\\uCE74\\uBA54\\uB77C 1 - TIR\",\n            frameData: (_liveFrames$2 = liveFrames[0]) === null || _liveFrames$2 === void 0 ? void 0 : _liveFrames$2.tir,\n            isStreaming: isStreaming[0],\n            onStreamClick: () => openViewer(0, 'tir', '카메라 1 - TIR'),\n            personDetected: personDetected[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(TestModePanel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-6 h-full\",\n        children: [serverMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 bg-blue-900 rounded-lg text-center mb-4\",\n          children: serverMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(EventLog, {\n          onOpenFull: handleOpenFullEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), viewer && /*#__PURE__*/_jsxDEV(FullscreenViewer, {\n      title: viewer.title,\n      frameData: (_liveFrames$viewer$ca = liveFrames[viewer.cameraId]) === null || _liveFrames$viewer$ca === void 0 ? void 0 : _liveFrames$viewer$ca[viewer.stream],\n      onClose: closeViewer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }, this), fullViewEvent && /*#__PURE__*/_jsxDEV(EventDetailViewer, {\n      event: fullViewEvent,\n      onClose: handleCloseFullEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: alertSound\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"g5Y3UDg8hHwX//lQzxqSlqLaC4g=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","useMemo","useRef","VideoStream","EventLog","TestModePanel","FullscreenViewer","EventDetailViewer","initSocket","disconnectSocket","subscribeToEvent","sendEvent","getSocket","alertSound","jsxDEV","_jsxDEV","Dashboard","_s","_liveFrames$","_liveFrames$2","_liveFrames$viewer$ca","serverMessage","setServerMessage","mode","setMode","cameraIds","liveFrames","setLiveFrames","rgb","tir","isStreaming","setIsStreaming","personDetected","setPersonDetected","viewer","setViewer","openViewer","cameraId","stream","title","closeViewer","fullViewEvent","setFullViewEvent","handleOpenFullEvent","event","handleCloseFullEvent","isModeChanging","setIsModeChanging","audioRef","console","log","data","message","camera_id","has_rgb","has_tir","person_detected","prev","checkConnection","setInterval","socket","connected","id","clearInterval","startAllStreams","error","Promise","resolve","setTimeout","stopAllStreams","current","play","catch","handleModeChange","newMode","children","className","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","frameData","onStreamClick","onOpenFull","onClose","ref","src","_c","$RefreshReg$"],"sources":["D:/Project2/DashBoard/frontend/src/components/Dashboard.js"],"sourcesContent":["// src/components/Dashboard.js\r\nimport React, { useEffect, useState, useCallback, useMemo, useRef } from 'react';\r\nimport VideoStream from './VideoStream';\r\nimport EventLog from './EventLog';\r\nimport TestModePanel from './TestModePanel';\r\nimport FullscreenViewer from './FullscreenViewer';\r\nimport EventDetailViewer from './EventDetailViewer';\r\nimport { initSocket, disconnectSocket, subscribeToEvent, sendEvent, getSocket } from '../services/socket';\r\nimport alertSound from '../assets/alarm.mp3';\r\n\r\nconst Dashboard = () => {\r\n  const [serverMessage, setServerMessage] = useState('');\r\n  const [mode, setMode] = useState('live');\r\n\r\n  // 카메라가 1대라면 [0], 2대면 [0,1]로 변경\r\n  const cameraIds = useMemo(() => [0], []);\r\n\r\n  // 프레임/상태\r\n  const [liveFrames, setLiveFrames] = useState({ 0: { rgb: null, tir: null } });\r\n  const [isStreaming, setIsStreaming] = useState({ 0: false });\r\n  const [personDetected, setPersonDetected] = useState({ 0: false });\r\n\r\n  // ✅ 모달 상태: 스냅샷이 아니라 \"선택 정보\"만 저장\r\n  // { cameraId, stream: 'rgb' | 'tir', title }\r\n  const [viewer, setViewer] = useState(null);\r\n  const openViewer = (cameraId, stream, title) => setViewer({ cameraId, stream, title });\r\n  const closeViewer = () => setViewer(null);\r\n\r\n  // 전체 화면 이벤트 뷰어 상태\r\n  const [fullViewEvent, setFullViewEvent] = useState(null);\r\n  const handleOpenFullEvent = (event) => setFullViewEvent(event);\r\n  const handleCloseFullEvent = () => setFullViewEvent(null);\r\n\r\n  // 모드 전환 중 상태 (백엔드 호환성을 위해 추가)\r\n  const [isModeChanging, setIsModeChanging] = useState(false);\r\n\r\n  const audioRef = useRef(null);\r\n\r\n  // 소켓 연결/해제 및 이벤트 수신 전용 useEffect\r\n  useEffect(() => {\r\n    console.log('Dashboard 컴포넌트 마운트 - 소켓 초기화 시작');\r\n    initSocket();\r\n    \r\n    // 서버 응답 메시지 수신\r\n    subscribeToEvent('response', (data) => { \r\n      console.log('서버 응답 수신:', data);\r\n      setServerMessage(data.message); \r\n    });\r\n    \r\n    // 비디오 프레임 수신\r\n    subscribeToEvent('video_frame', (data) => {\r\n      console.log('비디오 프레임 수신:', {\r\n        camera_id: data.camera_id,\r\n        has_rgb: !!data.rgb,\r\n        has_tir: !!data.tir,\r\n        person_detected: data.person_detected\r\n      });\r\n      \r\n      if (typeof data.camera_id === 'number') {\r\n        console.log(`카메라 ${data.camera_id} 프레임 처리 중...`);\r\n        setLiveFrames(prev => ({ ...prev, [data.camera_id]: { rgb: data.rgb, tir: data.tir } }));\r\n        setPersonDetected(prev => ({ ...prev, [data.camera_id]: data.person_detected }));\r\n        console.log(`카메라 ${data.camera_id} 프레임 처리 완료`);\r\n      } else if (data.camera_id === 'test_video') {\r\n        console.log('시험 영상 프레임 수신');\r\n      }\r\n    });\r\n    \r\n    // 연결 상태 확인 (백엔드 호환성을 위해 추가)\r\n    const checkConnection = setInterval(() => {\r\n      const socket = getSocket();\r\n      if (socket) {\r\n        console.log('소켓 연결 상태:', socket.connected, 'ID:', socket.id);\r\n      }\r\n    }, 5000);\r\n    \r\n    return () => { \r\n      console.log('Dashboard 컴포넌트 언마운트 - 소켓 정리');\r\n      clearInterval(checkConnection);\r\n      disconnectSocket(); \r\n    };\r\n  }, []);\r\n\r\n  // 실시간 스트림 시작 함수 (백엔드 호환성을 위해 복원)\r\n  const startAllStreams = useCallback(async () => {\r\n    console.log('실시간 스트림 시작 시도...');\r\n    setIsModeChanging(true);\r\n    \r\n    try {\r\n      // 소켓 연결 상태 확인\r\n      const socket = getSocket();\r\n      if (!socket || !socket.connected) {\r\n        console.error('소켓이 연결되지 않았습니다. 소켓 초기화를 다시 시도합니다.');\r\n        initSocket();\r\n        // 잠시 대기 후 다시 시도\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n      }\r\n      \r\n      // 모든 카메라에 대해 스트림 시작 요청\r\n      for (const id of cameraIds) {\r\n        console.log(`카메라 ${id + 1} 스트림 시작 요청`);\r\n        sendEvent('start_stream', { camera_id: id });\r\n        setIsStreaming(prev => ({ ...prev, [id]: true }));\r\n      }\r\n      \r\n      // 스트림 상태 초기화\r\n      setLiveFrames({ 0: { rgb: null, tir: null } });\r\n      setPersonDetected({ 0: false });\r\n      \r\n      console.log('실시간 스트림 시작 완료');\r\n    } catch (error) {\r\n      console.error('스트림 시작 오류:', error);\r\n    } finally {\r\n      setIsModeChanging(false);\r\n    }\r\n  }, [cameraIds]);\r\n\r\n  // 모든 스트림을 중지하는 함수 (백엔드 호환성을 위해 복원)\r\n  const stopAllStreams = useCallback(async () => {\r\n    console.log('모든 스트림 중지 시도...');\r\n    setIsModeChanging(true);\r\n    \r\n    try {\r\n      // 모든 카메라에 대해 스트림 중지 요청\r\n      for (const id of cameraIds) {\r\n        console.log(`카메라 ${id + 1} 스트림 중지 요청`);\r\n        sendEvent('stop_stream', { camera_id: id });\r\n      }\r\n      \r\n      // 스트림 상태 초기화\r\n      setIsStreaming({ 0: false });\r\n      setLiveFrames({ 0: { rgb: null, tir: null } });\r\n      setPersonDetected({ 0: false });\r\n      \r\n      console.log('모든 스트림 중지 완료');\r\n    } catch (error) {\r\n      console.error('스트림 중지 오류:', error);\r\n    } finally {\r\n      setIsModeChanging(false);\r\n    }\r\n  }, [cameraIds]);\r\n\r\n  // 모드 변경에 따라 스트림 시작/중지 (백엔드 호환성을 위해 수정)\r\n  useEffect(() => {\r\n    if (isModeChanging) return; // 모드 변경 중이면 무시\r\n    \r\n    if (mode === 'live') {\r\n      console.log('실시간 모드로 전환 - 스트림 시작');\r\n      // 실시간 모드로 전환 시 즉시 스트림 시작\r\n      startAllStreams();\r\n    } else {\r\n      console.log('시험 모드로 전환 - 스트림 중지');\r\n      // 시험 모드로 전환 시 즉시 스트림 중지\r\n      stopAllStreams();\r\n    }\r\n  }, [mode, startAllStreams, stopAllStreams, isModeChanging]);\r\n\r\n  // 알람음 (옵션)\r\n  useEffect(() => {\r\n    if (personDetected[0] && audioRef.current) {\r\n      audioRef.current.play().catch(error => console.error(\"오디오 재생 오류:\", error));\r\n    }\r\n  }, [personDetected]);\r\n\r\n  // 모드 변경 핸들러 (백엔드 호환성을 위해 추가)\r\n  const handleModeChange = (newMode) => {\r\n    if (isModeChanging) return; // 모드 변경 중이면 무시\r\n    \r\n    console.log(`모드 변경: ${mode} -> ${newMode}`);\r\n    setMode(newMode);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* 상단 모드 토글 */}\r\n      <div className=\"flex justify-center space-x-4 mb-4\">\r\n        <button\r\n          onClick={() => handleModeChange('live')}\r\n          disabled={isModeChanging}\r\n          className={`px-6 py-2 font-bold text-white rounded-lg transition-colors ${\r\n            mode === 'live' ? 'bg-cyan-600' : 'bg-gray-600 hover:bg-gray-700'\r\n          } ${isModeChanging ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n        >\r\n          {isModeChanging && mode === 'live' ? '전환 중...' : '실시간 다중 감시'}\r\n        </button>\r\n        <button\r\n          onClick={() => handleModeChange('test')}\r\n          disabled={isModeChanging}\r\n          className={`px-6 py-2 font-bold text-white rounded-lg transition-colors ${\r\n            mode === 'test' ? 'bg-cyan-600' : 'bg-gray-600 hover:bg-gray-700'\r\n          } ${isModeChanging ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n        >\r\n          {isModeChanging && mode === 'test' ? '전환 중...' : '시험 영상 분석'}\r\n        </button>\r\n      </div>\r\n\r\n      {/* 모드 전환 중 표시 (백엔드 호환성을 위해 추가) */}\r\n      {isModeChanging && (\r\n        <div className=\"text-center mb-4 p-2 bg-blue-900 rounded-lg\">\r\n          <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-white mx-auto\"></div>\r\n          <p className=\"text-white mt-2\">모드 전환 중...</p>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 lg:items-start\">\r\n        <div className=\"lg:col-span-2 space-y-6\">\r\n          {mode === 'live' ? (\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <VideoStream\r\n                title=\"카메라 1 - RGB\"\r\n                frameData={liveFrames[0]?.rgb}\r\n                isStreaming={isStreaming[0]}\r\n                onStreamClick={() => openViewer(0, 'rgb', '카메라 1 - RGB')}\r\n                personDetected={personDetected[0]}\r\n              />\r\n              <VideoStream\r\n                title=\"카메라 1 - TIR\"\r\n                frameData={liveFrames[0]?.tir}\r\n                isStreaming={isStreaming[0]}\r\n                onStreamClick={() => openViewer(0, 'tir', '카메라 1 - TIR')}\r\n                personDetected={personDetected[0]}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <TestModePanel />\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"space-y-6 h-full\">\r\n          {serverMessage && (\r\n            <div className=\"p-4 bg-blue-900 rounded-lg text-center mb-4\">{serverMessage}</div>\r\n          )}\r\n          <EventLog onOpenFull={handleOpenFullEvent} />\r\n        </div>\r\n      </div>\r\n\r\n      {/* ✅ 모달: 현재 liveFrames에서 프레임을 꺼내 전달 → 실시간 갱신 */}\r\n      {viewer && (\r\n        <FullscreenViewer\r\n          title={viewer.title}\r\n          frameData={liveFrames[viewer.cameraId]?.[viewer.stream]}\r\n          onClose={closeViewer}\r\n        />\r\n      )}\r\n\r\n      {/* 이벤트 상세 뷰어 렌더링 */}\r\n      {fullViewEvent && (\r\n        <EventDetailViewer event={fullViewEvent} onClose={handleCloseFullEvent} />\r\n      )}\r\n\r\n      <audio ref={audioRef} src={alertSound} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,OAAO,EAAEC,MAAM,QAAQ,OAAO;AAChF,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,SAASC,UAAU,EAAEC,gBAAgB,EAAEC,gBAAgB,EAAEC,SAAS,EAAEC,SAAS,QAAQ,oBAAoB;AACzG,OAAOC,UAAU,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,YAAA,EAAAC,aAAA,EAAAC,qBAAA;EACtB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACwB,IAAI,EAAEC,OAAO,CAAC,GAAGzB,QAAQ,CAAC,MAAM,CAAC;;EAExC;EACA,MAAM0B,SAAS,GAAGxB,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;;EAExC;EACA,MAAM,CAACyB,UAAU,EAAEC,aAAa,CAAC,GAAG5B,QAAQ,CAAC;IAAE,CAAC,EAAE;MAAE6B,GAAG,EAAE,IAAI;MAAEC,GAAG,EAAE;IAAK;EAAE,CAAC,CAAC;EAC7E,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGhC,QAAQ,CAAC;IAAE,CAAC,EAAE;EAAM,CAAC,CAAC;EAC5D,MAAM,CAACiC,cAAc,EAAEC,iBAAiB,CAAC,GAAGlC,QAAQ,CAAC;IAAE,CAAC,EAAE;EAAM,CAAC,CAAC;;EAElE;EACA;EACA,MAAM,CAACmC,MAAM,EAAEC,SAAS,CAAC,GAAGpC,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAMqC,UAAU,GAAGA,CAACC,QAAQ,EAAEC,MAAM,EAAEC,KAAK,KAAKJ,SAAS,CAAC;IAAEE,QAAQ;IAAEC,MAAM;IAAEC;EAAM,CAAC,CAAC;EACtF,MAAMC,WAAW,GAAGA,CAAA,KAAML,SAAS,CAAC,IAAI,CAAC;;EAEzC;EACA,MAAM,CAACM,aAAa,EAAEC,gBAAgB,CAAC,GAAG3C,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM4C,mBAAmB,GAAIC,KAAK,IAAKF,gBAAgB,CAACE,KAAK,CAAC;EAC9D,MAAMC,oBAAoB,GAAGA,CAAA,KAAMH,gBAAgB,CAAC,IAAI,CAAC;;EAEzD;EACA,MAAM,CAACI,cAAc,EAAEC,iBAAiB,CAAC,GAAGhD,QAAQ,CAAC,KAAK,CAAC;EAE3D,MAAMiD,QAAQ,GAAG9C,MAAM,CAAC,IAAI,CAAC;;EAE7B;EACAJ,SAAS,CAAC,MAAM;IACdmD,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC7C1C,UAAU,CAAC,CAAC;;IAEZ;IACAE,gBAAgB,CAAC,UAAU,EAAGyC,IAAI,IAAK;MACrCF,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEC,IAAI,CAAC;MAC9B7B,gBAAgB,CAAC6B,IAAI,CAACC,OAAO,CAAC;IAChC,CAAC,CAAC;;IAEF;IACA1C,gBAAgB,CAAC,aAAa,EAAGyC,IAAI,IAAK;MACxCF,OAAO,CAACC,GAAG,CAAC,aAAa,EAAE;QACzBG,SAAS,EAAEF,IAAI,CAACE,SAAS;QACzBC,OAAO,EAAE,CAAC,CAACH,IAAI,CAACvB,GAAG;QACnB2B,OAAO,EAAE,CAAC,CAACJ,IAAI,CAACtB,GAAG;QACnB2B,eAAe,EAAEL,IAAI,CAACK;MACxB,CAAC,CAAC;MAEF,IAAI,OAAOL,IAAI,CAACE,SAAS,KAAK,QAAQ,EAAE;QACtCJ,OAAO,CAACC,GAAG,CAAC,OAAOC,IAAI,CAACE,SAAS,cAAc,CAAC;QAChD1B,aAAa,CAAC8B,IAAI,KAAK;UAAE,GAAGA,IAAI;UAAE,CAACN,IAAI,CAACE,SAAS,GAAG;YAAEzB,GAAG,EAAEuB,IAAI,CAACvB,GAAG;YAAEC,GAAG,EAAEsB,IAAI,CAACtB;UAAI;QAAE,CAAC,CAAC,CAAC;QACxFI,iBAAiB,CAACwB,IAAI,KAAK;UAAE,GAAGA,IAAI;UAAE,CAACN,IAAI,CAACE,SAAS,GAAGF,IAAI,CAACK;QAAgB,CAAC,CAAC,CAAC;QAChFP,OAAO,CAACC,GAAG,CAAC,OAAOC,IAAI,CAACE,SAAS,YAAY,CAAC;MAChD,CAAC,MAAM,IAAIF,IAAI,CAACE,SAAS,KAAK,YAAY,EAAE;QAC1CJ,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC7B;IACF,CAAC,CAAC;;IAEF;IACA,MAAMQ,eAAe,GAAGC,WAAW,CAAC,MAAM;MACxC,MAAMC,MAAM,GAAGhD,SAAS,CAAC,CAAC;MAC1B,IAAIgD,MAAM,EAAE;QACVX,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEU,MAAM,CAACC,SAAS,EAAE,KAAK,EAAED,MAAM,CAACE,EAAE,CAAC;MAC9D;IACF,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAM;MACXb,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC1Ca,aAAa,CAACL,eAAe,CAAC;MAC9BjD,gBAAgB,CAAC,CAAC;IACpB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMuD,eAAe,GAAGhE,WAAW,CAAC,YAAY;IAC9CiD,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/BH,iBAAiB,CAAC,IAAI,CAAC;IAEvB,IAAI;MACF;MACA,MAAMa,MAAM,GAAGhD,SAAS,CAAC,CAAC;MAC1B,IAAI,CAACgD,MAAM,IAAI,CAACA,MAAM,CAACC,SAAS,EAAE;QAChCZ,OAAO,CAACgB,KAAK,CAAC,mCAAmC,CAAC;QAClDzD,UAAU,CAAC,CAAC;QACZ;QACA,MAAM,IAAI0D,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;MACzD;;MAEA;MACA,KAAK,MAAML,EAAE,IAAIrC,SAAS,EAAE;QAC1BwB,OAAO,CAACC,GAAG,CAAC,OAAOY,EAAE,GAAG,CAAC,YAAY,CAAC;QACtCnD,SAAS,CAAC,cAAc,EAAE;UAAE0C,SAAS,EAAES;QAAG,CAAC,CAAC;QAC5C/B,cAAc,CAAC0B,IAAI,KAAK;UAAE,GAAGA,IAAI;UAAE,CAACK,EAAE,GAAG;QAAK,CAAC,CAAC,CAAC;MACnD;;MAEA;MACAnC,aAAa,CAAC;QAAE,CAAC,EAAE;UAAEC,GAAG,EAAE,IAAI;UAAEC,GAAG,EAAE;QAAK;MAAE,CAAC,CAAC;MAC9CI,iBAAiB,CAAC;QAAE,CAAC,EAAE;MAAM,CAAC,CAAC;MAE/BgB,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC9B,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdhB,OAAO,CAACgB,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;IACpC,CAAC,SAAS;MACRlB,iBAAiB,CAAC,KAAK,CAAC;IAC1B;EACF,CAAC,EAAE,CAACtB,SAAS,CAAC,CAAC;;EAEf;EACA,MAAM4C,cAAc,GAAGrE,WAAW,CAAC,YAAY;IAC7CiD,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9BH,iBAAiB,CAAC,IAAI,CAAC;IAEvB,IAAI;MACF;MACA,KAAK,MAAMe,EAAE,IAAIrC,SAAS,EAAE;QAC1BwB,OAAO,CAACC,GAAG,CAAC,OAAOY,EAAE,GAAG,CAAC,YAAY,CAAC;QACtCnD,SAAS,CAAC,aAAa,EAAE;UAAE0C,SAAS,EAAES;QAAG,CAAC,CAAC;MAC7C;;MAEA;MACA/B,cAAc,CAAC;QAAE,CAAC,EAAE;MAAM,CAAC,CAAC;MAC5BJ,aAAa,CAAC;QAAE,CAAC,EAAE;UAAEC,GAAG,EAAE,IAAI;UAAEC,GAAG,EAAE;QAAK;MAAE,CAAC,CAAC;MAC9CI,iBAAiB,CAAC;QAAE,CAAC,EAAE;MAAM,CAAC,CAAC;MAE/BgB,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC7B,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdhB,OAAO,CAACgB,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;IACpC,CAAC,SAAS;MACRlB,iBAAiB,CAAC,KAAK,CAAC;IAC1B;EACF,CAAC,EAAE,CAACtB,SAAS,CAAC,CAAC;;EAEf;EACA3B,SAAS,CAAC,MAAM;IACd,IAAIgD,cAAc,EAAE,OAAO,CAAC;;IAE5B,IAAIvB,IAAI,KAAK,MAAM,EAAE;MACnB0B,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAClC;MACAc,eAAe,CAAC,CAAC;IACnB,CAAC,MAAM;MACLf,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;MACjC;MACAmB,cAAc,CAAC,CAAC;IAClB;EACF,CAAC,EAAE,CAAC9C,IAAI,EAAEyC,eAAe,EAAEK,cAAc,EAAEvB,cAAc,CAAC,CAAC;;EAE3D;EACAhD,SAAS,CAAC,MAAM;IACd,IAAIkC,cAAc,CAAC,CAAC,CAAC,IAAIgB,QAAQ,CAACsB,OAAO,EAAE;MACzCtB,QAAQ,CAACsB,OAAO,CAACC,IAAI,CAAC,CAAC,CAACC,KAAK,CAACP,KAAK,IAAIhB,OAAO,CAACgB,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC,CAAC;IAC5E;EACF,CAAC,EAAE,CAACjC,cAAc,CAAC,CAAC;;EAEpB;EACA,MAAMyC,gBAAgB,GAAIC,OAAO,IAAK;IACpC,IAAI5B,cAAc,EAAE,OAAO,CAAC;;IAE5BG,OAAO,CAACC,GAAG,CAAC,UAAU3B,IAAI,OAAOmD,OAAO,EAAE,CAAC;IAC3ClD,OAAO,CAACkD,OAAO,CAAC;EAClB,CAAC;EAED,oBACE3D,OAAA;IAAA4D,QAAA,gBAEE5D,OAAA;MAAK6D,SAAS,EAAC,oCAAoC;MAAAD,QAAA,gBACjD5D,OAAA;QACE8D,OAAO,EAAEA,CAAA,KAAMJ,gBAAgB,CAAC,MAAM,CAAE;QACxCK,QAAQ,EAAEhC,cAAe;QACzB8B,SAAS,EAAE,+DACTrD,IAAI,KAAK,MAAM,GAAG,aAAa,GAAG,+BAA+B,IAC/DuB,cAAc,GAAG,+BAA+B,GAAG,EAAE,EAAG;QAAA6B,QAAA,EAE3D7B,cAAc,IAAIvB,IAAI,KAAK,MAAM,GAAG,SAAS,GAAG;MAAW;QAAAwD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD,CAAC,eACTnE,OAAA;QACE8D,OAAO,EAAEA,CAAA,KAAMJ,gBAAgB,CAAC,MAAM,CAAE;QACxCK,QAAQ,EAAEhC,cAAe;QACzB8B,SAAS,EAAE,+DACTrD,IAAI,KAAK,MAAM,GAAG,aAAa,GAAG,+BAA+B,IAC/DuB,cAAc,GAAG,+BAA+B,GAAG,EAAE,EAAG;QAAA6B,QAAA,EAE3D7B,cAAc,IAAIvB,IAAI,KAAK,MAAM,GAAG,SAAS,GAAG;MAAU;QAAAwD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAGLpC,cAAc,iBACb/B,OAAA;MAAK6D,SAAS,EAAC,6CAA6C;MAAAD,QAAA,gBAC1D5D,OAAA;QAAK6D,SAAS,EAAC;MAAmE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACzFnE,OAAA;QAAG6D,SAAS,EAAC,iBAAiB;QAAAD,QAAA,EAAC;MAAU;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CACN,eAEDnE,OAAA;MAAK6D,SAAS,EAAC,sDAAsD;MAAAD,QAAA,gBACnE5D,OAAA;QAAK6D,SAAS,EAAC,yBAAyB;QAAAD,QAAA,EACrCpD,IAAI,KAAK,MAAM,gBACdR,OAAA;UAAK6D,SAAS,EAAC,wBAAwB;UAAAD,QAAA,gBACrC5D,OAAA,CAACZ,WAAW;YACVoC,KAAK,EAAC,4BAAa;YACnB4C,SAAS,GAAAjE,YAAA,GAAEQ,UAAU,CAAC,CAAC,CAAC,cAAAR,YAAA,uBAAbA,YAAA,CAAeU,GAAI;YAC9BE,WAAW,EAAEA,WAAW,CAAC,CAAC,CAAE;YAC5BsD,aAAa,EAAEA,CAAA,KAAMhD,UAAU,CAAC,CAAC,EAAE,KAAK,EAAE,aAAa,CAAE;YACzDJ,cAAc,EAAEA,cAAc,CAAC,CAAC;UAAE;YAAA+C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnC,CAAC,eACFnE,OAAA,CAACZ,WAAW;YACVoC,KAAK,EAAC,4BAAa;YACnB4C,SAAS,GAAAhE,aAAA,GAAEO,UAAU,CAAC,CAAC,CAAC,cAAAP,aAAA,uBAAbA,aAAA,CAAeU,GAAI;YAC9BC,WAAW,EAAEA,WAAW,CAAC,CAAC,CAAE;YAC5BsD,aAAa,EAAEA,CAAA,KAAMhD,UAAU,CAAC,CAAC,EAAE,KAAK,EAAE,aAAa,CAAE;YACzDJ,cAAc,EAAEA,cAAc,CAAC,CAAC;UAAE;YAAA+C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,gBAENnE,OAAA,CAACV,aAAa;UAAA0E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MACjB;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAENnE,OAAA;QAAK6D,SAAS,EAAC,kBAAkB;QAAAD,QAAA,GAC9BtD,aAAa,iBACZN,OAAA;UAAK6D,SAAS,EAAC,6CAA6C;UAAAD,QAAA,EAAEtD;QAAa;UAAA0D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAClF,eACDnE,OAAA,CAACX,QAAQ;UAACiF,UAAU,EAAE1C;QAAoB;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGLhD,MAAM,iBACLnB,OAAA,CAACT,gBAAgB;MACfiC,KAAK,EAAEL,MAAM,CAACK,KAAM;MACpB4C,SAAS,GAAA/D,qBAAA,GAAEM,UAAU,CAACQ,MAAM,CAACG,QAAQ,CAAC,cAAAjB,qBAAA,uBAA3BA,qBAAA,CAA8Bc,MAAM,CAACI,MAAM,CAAE;MACxDgD,OAAO,EAAE9C;IAAY;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CACF,EAGAzC,aAAa,iBACZ1B,OAAA,CAACR,iBAAiB;MAACqC,KAAK,EAAEH,aAAc;MAAC6C,OAAO,EAAEzC;IAAqB;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC1E,eAEDnE,OAAA;MAAOwE,GAAG,EAAEvC,QAAS;MAACwC,GAAG,EAAE3E;IAAW;MAAAkE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEV,CAAC;AAACjE,EAAA,CAnPID,SAAS;AAAAyE,EAAA,GAATzE,SAAS;AAqPf,eAAeA,SAAS;AAAC,IAAAyE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}