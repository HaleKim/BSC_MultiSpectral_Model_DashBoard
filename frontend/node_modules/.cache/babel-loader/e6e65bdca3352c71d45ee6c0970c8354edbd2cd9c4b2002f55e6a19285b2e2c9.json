{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project2\\\\DashBoard\\\\frontend\\\\src\\\\components\\\\TestModePanel.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/TestModePanel.js (동기화된 비디오 플레이어 버전)\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { getTestVideos, getModels } from '../services/api';\nimport { sendEvent, subscribeToEvent, unsubscribeFromEvent } from '../services/socket';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TestModePanel = () => {\n  _s();\n  const [testVideos, setTestVideos] = useState([]);\n  const [selectedRgbVideo, setSelectedRgbVideo] = useState('');\n  const [selectedTirVideo, setSelectedTirVideo] = useState('');\n  const [selectedModel, setSelectedModel] = useState('');\n  const [availableModels, setAvailableModels] = useState([]);\n\n  // 분석 상태\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [rgbFrame, setRgbFrame] = useState(null);\n  const [tirFrame, setTirFrame] = useState(null);\n\n  // 로딩 상태\n  const [isLoading, setIsLoading] = useState(true);\n  const [isModelsLoading, setIsModelsLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // 비디오 플레이어 상태\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [playbackRate, setPlaybackRate] = useState(1);\n\n  // 비디오 참조\n  const rgbVideoRef = useRef(null);\n  const tirVideoRef = useRef(null);\n  const isSeeking = useRef(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      setIsModelsLoading(true);\n      try {\n        // 비디오 목록과 모델 목록을 병렬로 로드\n        const [videosResponse, modelsResponse] = await Promise.all([getTestVideos(), getModels()]);\n\n        // 비디오 목록 설정\n        setTestVideos(videosResponse.data);\n        if (videosResponse.data.length > 0) {\n          setSelectedRgbVideo(videosResponse.data[0]);\n          setSelectedTirVideo(videosResponse.data[0]);\n        }\n\n        // 모델 목록 설정\n        setAvailableModels(modelsResponse.data);\n\n        // 테스트 모드 전용 모델 설정 (실시간 감시와 분리)\n        const savedTestModel = localStorage.getItem('selectedTestModel');\n        if (savedTestModel && modelsResponse.data.includes(savedTestModel)) {\n          setSelectedModel(savedTestModel);\n          console.log('저장된 테스트 모델 로드:', savedTestModel);\n        } else if (modelsResponse.data.length > 0) {\n          setSelectedModel(modelsResponse.data[0]);\n          console.log('기본 테스트 모델 설정:', modelsResponse.data[0]);\n        }\n        setError('');\n      } catch (error) {\n        console.error(\"데이터 로딩 실패:\", error);\n        setError('데이터를 불러오는데 실패했습니다.');\n      } finally {\n        setIsLoading(false);\n        setIsModelsLoading(false);\n      }\n    };\n    fetchData();\n\n    // 시험 영상 프레임 수신 구독\n    const handleVideoFrame = data => {\n      console.log('TestModePanel에서 비디오 프레임 수신:', data);\n      if (data.camera_id === 'test_video') {\n        setRgbFrame(data.rgb);\n        setTirFrame(data.tir);\n        console.log('테스트 프레임 설정 완료');\n      }\n    };\n    subscribeToEvent('video_frame', handleVideoFrame);\n    return () => {\n      unsubscribeFromEvent('video_frame', handleVideoFrame);\n      // 컴포넌트 언마운트 시 분석 중지\n      if (isAnalyzing) {\n        sendEvent('stop_test_stream', {});\n      }\n    };\n  }, [isAnalyzing]);\n\n  // 비디오 선택 변경 시 메타데이터 로드 강제\n  useEffect(() => {\n    if (rgbVideoRef.current && selectedRgbVideo) {\n      const video = rgbVideoRef.current;\n      video.load(); // 강제 리로드\n\n      const checkMetadata = () => {\n        if (video.duration && !isNaN(video.duration) && video.duration !== Infinity) {\n          setDuration(video.duration);\n          console.log('RGB 비디오 메타데이터 강제 로드 성공:', video.duration);\n        } else {\n          setTimeout(checkMetadata, 100);\n        }\n      };\n      setTimeout(checkMetadata, 100);\n    }\n  }, [selectedRgbVideo]);\n  useEffect(() => {\n    if (tirVideoRef.current && selectedTirVideo) {\n      const video = tirVideoRef.current;\n      video.load(); // 강제 리로드\n      console.log('TIR 비디오 강제 리로드');\n    }\n  }, [selectedTirVideo]);\n\n  // 비디오 동기화 함수들\n  const syncVideos = targetTime => {\n    if (rgbVideoRef.current && tirVideoRef.current && !isSeeking.current) {\n      isSeeking.current = true;\n      rgbVideoRef.current.currentTime = targetTime;\n      tirVideoRef.current.currentTime = targetTime;\n      setTimeout(() => {\n        isSeeking.current = false;\n      }, 100);\n    }\n  };\n  const handlePlay = async () => {\n    console.log('재생 버튼 클릭됨');\n    if (!selectedRgbVideo || !selectedTirVideo) {\n      console.warn('비디오를 먼저 선택해주세요.');\n      return;\n    }\n    if (!rgbVideoRef.current || !tirVideoRef.current) {\n      console.warn('비디오 참조가 없습니다.');\n      return;\n    }\n    try {\n      // RGB 비디오 로드 확인 및 재생\n      if (rgbVideoRef.current.readyState < 2) {\n        console.log('RGB 비디오 로딩 대기 중...');\n        rgbVideoRef.current.load();\n        await new Promise(resolve => {\n          const checkLoaded = () => {\n            if (rgbVideoRef.current.readyState >= 2) {\n              resolve();\n            } else {\n              setTimeout(checkLoaded, 100);\n            }\n          };\n          checkLoaded();\n        });\n      }\n\n      // TIR 비디오 로드 확인 및 재생\n      if (tirVideoRef.current.readyState < 2) {\n        console.log('TIR 비디오 로딩 대기 중...');\n        tirVideoRef.current.load();\n        await new Promise(resolve => {\n          const checkLoaded = () => {\n            if (tirVideoRef.current.readyState >= 2) {\n              resolve();\n            } else {\n              setTimeout(checkLoaded, 100);\n            }\n          };\n          checkLoaded();\n        });\n      }\n      console.log('비디오 재생 시도');\n      await Promise.all([rgbVideoRef.current.play(), tirVideoRef.current.play()]);\n      console.log('비디오 재생 성공');\n    } catch (error) {\n      console.error('비디오 재생 실패:', error);\n    }\n  };\n  const handlePause = () => {\n    console.log('일시정지 버튼 클릭됨');\n    if (rgbVideoRef.current && tirVideoRef.current) {\n      try {\n        rgbVideoRef.current.pause();\n        tirVideoRef.current.pause();\n        console.log('비디오 일시정지 성공');\n      } catch (e) {\n        console.warn('비디오 일시정지 실패:', e);\n      }\n    }\n  };\n  const handlePlaybackRateChange = rate => {\n    if (rgbVideoRef.current && tirVideoRef.current) {\n      rgbVideoRef.current.playbackRate = rate;\n      tirVideoRef.current.playbackRate = rate;\n      setPlaybackRate(rate);\n    }\n  };\n\n  // 비디오 이벤트 핸들러들\n  const handleRgbTimeUpdate = () => {\n    if (rgbVideoRef.current && !isSeeking.current) {\n      setCurrentTime(rgbVideoRef.current.currentTime);\n      // TIR 비디오 동기화\n      if (tirVideoRef.current && Math.abs(tirVideoRef.current.currentTime - rgbVideoRef.current.currentTime) > 0.5) {\n        tirVideoRef.current.currentTime = rgbVideoRef.current.currentTime;\n      }\n    }\n  };\n  const handleRgbLoadedMetadata = () => {\n    if (rgbVideoRef.current) {\n      const videoDuration = rgbVideoRef.current.duration;\n      setDuration(videoDuration);\n      console.log('RGB 비디오 메타데이터 로드됨, 길이:', videoDuration);\n    }\n  };\n  const handleTirLoadedMetadata = () => {\n    if (tirVideoRef.current) {\n      console.log('TIR 비디오 메타데이터 로드됨, 길이:', tirVideoRef.current.duration);\n    }\n  };\n  const handleRgbPlay = () => {\n    setIsPlaying(true);\n    console.log('RGB 비디오 재생 시작');\n  };\n  const handleRgbPause = () => {\n    setIsPlaying(false);\n    console.log('RGB 비디오 일시정지');\n  };\n  const handleRgbLoadedData = () => {\n    if (rgbVideoRef.current) {\n      console.log('RGB 비디오 데이터 로드 완료, readyState:', rgbVideoRef.current.readyState);\n    }\n  };\n  const handleTirLoadedData = () => {\n    if (tirVideoRef.current) {\n      console.log('TIR 비디오 데이터 로드 완료, readyState:', tirVideoRef.current.readyState);\n    }\n  };\n  const handleStartAnalysis = () => {\n    if (!selectedRgbVideo || !selectedTirVideo || !selectedModel) {\n      setError('RGB 영상, TIR 영상, 그리고 모델을 모두 선택해주세요.');\n      return;\n    }\n    setError('');\n    setRgbFrame(null);\n    setTirFrame(null);\n    setIsAnalyzing(true);\n\n    // 백엔드에 분석 시작 요청\n    sendEvent('start_test_stream', {\n      rgb_filename: selectedRgbVideo,\n      tir_filename: selectedTirVideo,\n      model: selectedModel\n    });\n  };\n  const handleStopAnalysis = () => {\n    setIsAnalyzing(false);\n    sendEvent('stop_test_stream', {});\n    setRgbFrame(null);\n    setTirFrame(null);\n  };\n  const formatTime = time => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 bg-gray-800 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold mb-3 text-white\",\n        children: \"\\uBD84\\uC11D \\uBAA8\\uB378 \\uC120\\uD0DD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedModel,\n        onChange: e => {\n          const newModel = e.target.value;\n          setSelectedModel(newModel);\n          // 테스트 모드 전용 모델 저장 (실시간 감시와 분리)\n          localStorage.setItem('selectedTestModel', newModel);\n          console.log('테스트 모드에서 모델 변경:', newModel);\n        },\n        className: \"w-full px-3 py-2 text-white bg-gray-700 border border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-cyan-500\",\n        disabled: isAnalyzing || isModelsLoading,\n        children: isModelsLoading ? /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"\\uBAA8\\uB378 \\uBAA9\\uB85D\\uC744 \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 25\n        }, this) : availableModels.length > 0 ? availableModels.map(model => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: model,\n          children: model\n        }, model, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"\\uC0AC\\uC6A9 \\uAC00\\uB2A5\\uD55C \\uBAA8\\uB378\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 text-xs text-gray-400\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"models_ai \\uD3F4\\uB354\\uC5D0\\uC11C \", availableModels.length, \"\\uAC1C \\uBAA8\\uB378 \\uBC1C\\uACAC\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 21\n        }, this), selectedModel && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uC120\\uD0DD\\uB41C \\uBAA8\\uB378: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-cyan-400 font-mono\",\n            children: selectedModel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-gray-800 rounded-lg shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold mb-3 text-white\",\n          children: \"RGB \\uC601\\uC0C1 \\uC120\\uD0DD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedRgbVideo,\n          onChange: e => {\n            setSelectedRgbVideo(e.target.value);\n            // 비디오 변경 시 상태 초기화\n            setIsPlaying(false);\n            setCurrentTime(0);\n            setDuration(0);\n          },\n          className: \"w-full px-3 py-2 text-white bg-gray-700 border border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-cyan-500 mb-3\",\n          disabled: isLoading || isAnalyzing,\n          children: isLoading ? /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"\\uBAA9\\uB85D\\uC744 \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 29\n          }, this) : testVideos.length > 0 ? testVideos.map(video => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: video,\n            children: video\n          }, `rgb-${video}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 33\n          }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"\\uC0AC\\uC6A9 \\uAC00\\uB2A5\\uD55C \\uC601\\uC0C1\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-gray-800 rounded-lg shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold mb-3 text-white\",\n          children: \"TIR \\uC601\\uC0C1 \\uC120\\uD0DD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedTirVideo,\n          onChange: e => {\n            setSelectedTirVideo(e.target.value);\n            // 비디오 변경 시 상태 초기화\n            setIsPlaying(false);\n            setCurrentTime(0);\n            setDuration(0);\n          },\n          className: \"w-full px-3 py-2 text-white bg-gray-700 border border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-cyan-500 mb-3\",\n          disabled: isLoading || isAnalyzing,\n          children: isLoading ? /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"\\uBAA9\\uB85D\\uC744 \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 29\n          }, this) : testVideos.length > 0 ? testVideos.map(video => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: video,\n            children: video\n          }, `tir-${video}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 33\n          }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"\\uC0AC\\uC6A9 \\uAC00\\uB2A5\\uD55C \\uC601\\uC0C1\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 bg-gray-800 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold mb-3 text-white\",\n        children: \"\\uB3D9\\uAE30\\uD654\\uB41C \\uBE44\\uB514\\uC624 \\uD50C\\uB808\\uC774\\uC5B4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-black rounded-md aspect-video relative\",\n          children: [selectedRgbVideo ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"video\", {\n              ref: rgbVideoRef,\n              src: `${process.env.REACT_APP_API_URL}/test_videos/${selectedRgbVideo}`,\n              className: `w-full h-full object-contain ${isAnalyzing ? 'opacity-50' : ''}`,\n              onTimeUpdate: handleRgbTimeUpdate,\n              onLoadedMetadata: handleRgbLoadedMetadata,\n              onLoadedData: handleRgbLoadedData,\n              onPlay: handleRgbPlay,\n              onPause: handleRgbPause,\n              preload: \"metadata\",\n              muted: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 33\n            }, this), isAnalyzing && rgbFrame && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/jpeg;base64,${rgbFrame}`,\n              alt: \"RGB Analysis Result\",\n              className: \"absolute top-0 left-0 w-full h-full object-contain\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-center h-full text-gray-500\",\n            children: \"RGB \\uC601\\uC0C1\\uC744 \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute top-2 left-2 bg-black bg-opacity-50 text-white px-2 py-1 rounded text-sm\",\n            children: \"RGB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-black rounded-md aspect-video relative\",\n          children: [selectedTirVideo ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"video\", {\n              ref: tirVideoRef,\n              src: `${process.env.REACT_APP_API_URL}/test_videos/${selectedTirVideo}`,\n              className: `w-full h-full object-contain ${isAnalyzing ? 'opacity-50' : ''}`,\n              onLoadedMetadata: handleTirLoadedMetadata,\n              onLoadedData: handleTirLoadedData,\n              preload: \"metadata\",\n              muted: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 33\n            }, this), isAnalyzing && tirFrame && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/jpeg;base64,${tirFrame}`,\n              alt: \"TIR Analysis Result\",\n              className: \"absolute top-0 left-0 w-full h-full object-contain\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-center h-full text-gray-500\",\n            children: \"TIR \\uC601\\uC0C1\\uC744 \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute top-2 left-2 bg-black bg-opacity-50 text-white px-2 py-1 rounded text-sm\",\n            children: \"TIR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-white text-sm\",\n            children: formatTime(currentTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"0\",\n            max: duration || 0,\n            value: currentTime,\n            onChange: e => {\n              const time = parseFloat(e.target.value);\n              console.log('진행 바 조작:', time, '/', duration);\n              syncVideos(time);\n              setCurrentTime(time);\n            },\n            disabled: !selectedRgbVideo || !selectedTirVideo,\n            className: \"flex-1 h-2 bg-gray-600 rounded-lg appearance-none cursor-pointer slider\",\n            style: {\n              background: `linear-gradient(to right, #06b6d4 0%, #06b6d4 ${duration > 0 ? currentTime / duration * 100 : 0}%, #4b5563 ${duration > 0 ? currentTime / duration * 100 : 0}%, #4b5563 100%)`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-white text-sm\",\n            children: formatTime(duration)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-400 space-y-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uD604\\uC7AC \\uC2DC\\uAC04: \", currentTime.toFixed(2), \"s / \\uCD1D \\uAE38\\uC774: \", duration.toFixed(2), \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uC7AC\\uC0DD \\uC0C1\\uD0DC: \", isPlaying ? '재생 중' : '일시정지']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"RGB \\uC900\\uBE44\\uC0C1\\uD0DC: \", rgbVideoRef.current ? rgbVideoRef.current.readyState : 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"TIR \\uC900\\uBE44\\uC0C1\\uD0DC: \", tirVideoRef.current ? tirVideoRef.current.readyState : 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              console.log('버튼 클릭됨, isPlaying:', isPlaying);\n              console.log('RGB 비디오 ref:', !!rgbVideoRef.current);\n              console.log('TIR 비디오 ref:', !!tirVideoRef.current);\n              console.log('선택된 RGB 비디오:', selectedRgbVideo);\n              console.log('선택된 TIR 비디오:', selectedTirVideo);\n              if (isPlaying) {\n                handlePause();\n              } else {\n                handlePlay();\n              }\n            },\n            disabled: !selectedRgbVideo || !selectedTirVideo,\n            className: \"px-4 py-2 bg-cyan-600 hover:bg-cyan-700 disabled:bg-gray-600 text-white rounded-lg transition-colors\",\n            children: isPlaying ? '⏸️ 일시정지' : '▶️ 재생'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: playbackRate,\n            onChange: e => handlePlaybackRateChange(parseFloat(e.target.value)),\n            disabled: !selectedRgbVideo || !selectedTirVideo,\n            className: \"px-2 py-1 bg-gray-700 text-white rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: 0.5,\n              children: \"0.5x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: 1,\n              children: \"1x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: 1.5,\n              children: \"1.5x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: 2,\n              children: \"2x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center space-x-4\",\n      children: !isAnalyzing ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartAnalysis,\n        disabled: isLoading || !selectedRgbVideo || !selectedTirVideo || !selectedModel,\n        className: \"px-6 py-2 font-semibold text-white bg-green-600 rounded-lg hover:bg-green-700 disabled:bg-gray-600 disabled:cursor-not-allowed\",\n        children: \"AI \\uBD84\\uC11D \\uC2DC\\uC791\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStopAnalysis,\n        className: \"px-6 py-2 font-semibold text-white bg-red-600 rounded-lg hover:bg-red-700\",\n        children: \"\\uBD84\\uC11D \\uC911\\uC9C0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 bg-red-800 border border-red-600 rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-200\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 bg-gray-800 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold mb-3 text-white\",\n        children: \"\\uBD84\\uC11D \\uC0C1\\uD0DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-400\",\n            children: \"\\uC120\\uD0DD\\uB41C \\uBAA8\\uB378:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-white font-mono\",\n            children: selectedModel || '선택되지 않음'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-400\",\n            children: \"RGB \\uC601\\uC0C1:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-white font-mono truncate\",\n            children: selectedRgbVideo || '선택되지 않음'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-400\",\n            children: \"TIR \\uC601\\uC0C1:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-white font-mono truncate\",\n            children: selectedTirVideo || '선택되지 않음'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-400\",\n          children: \"\\uC0C1\\uD0DC:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `ml-2 px-2 py-1 rounded text-xs font-semibold ${isAnalyzing ? 'bg-green-600 text-white' : 'bg-gray-600 text-gray-300'}`,\n          children: isAnalyzing ? 'AI 분석 중' : '대기 중'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 298,\n    columnNumber: 9\n  }, this);\n};\n_s(TestModePanel, \"WsCY5X/cwoxjQcI9aiHNm4L4EKk=\");\n_c = TestModePanel;\nexport default TestModePanel;\nvar _c;\n$RefreshReg$(_c, \"TestModePanel\");","map":{"version":3,"names":["React","useState","useEffect","useRef","getTestVideos","getModels","sendEvent","subscribeToEvent","unsubscribeFromEvent","jsxDEV","_jsxDEV","Fragment","_Fragment","TestModePanel","_s","testVideos","setTestVideos","selectedRgbVideo","setSelectedRgbVideo","selectedTirVideo","setSelectedTirVideo","selectedModel","setSelectedModel","availableModels","setAvailableModels","isAnalyzing","setIsAnalyzing","rgbFrame","setRgbFrame","tirFrame","setTirFrame","isLoading","setIsLoading","isModelsLoading","setIsModelsLoading","error","setError","isPlaying","setIsPlaying","currentTime","setCurrentTime","duration","setDuration","playbackRate","setPlaybackRate","rgbVideoRef","tirVideoRef","isSeeking","fetchData","videosResponse","modelsResponse","Promise","all","data","length","savedTestModel","localStorage","getItem","includes","console","log","handleVideoFrame","camera_id","rgb","tir","current","video","load","checkMetadata","isNaN","Infinity","setTimeout","syncVideos","targetTime","handlePlay","warn","readyState","resolve","checkLoaded","play","handlePause","pause","e","handlePlaybackRateChange","rate","handleRgbTimeUpdate","Math","abs","handleRgbLoadedMetadata","videoDuration","handleTirLoadedMetadata","handleRgbPlay","handleRgbPause","handleRgbLoadedData","handleTirLoadedData","handleStartAnalysis","rgb_filename","tir_filename","model","handleStopAnalysis","formatTime","time","minutes","floor","seconds","toString","padStart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","newModel","target","setItem","disabled","map","ref","src","process","env","REACT_APP_API_URL","onTimeUpdate","onLoadedMetadata","onLoadedData","onPlay","onPause","preload","muted","alt","type","min","max","parseFloat","style","background","toFixed","onClick","_c","$RefreshReg$"],"sources":["D:/Project2/DashBoard/frontend/src/components/TestModePanel.js"],"sourcesContent":["// frontend/src/components/TestModePanel.js (동기화된 비디오 플레이어 버전)\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { getTestVideos, getModels } from '../services/api';\r\nimport { sendEvent, subscribeToEvent, unsubscribeFromEvent } from '../services/socket';\r\n\r\nconst TestModePanel = () => {\r\n    const [testVideos, setTestVideos] = useState([]);\r\n    const [selectedRgbVideo, setSelectedRgbVideo] = useState('');\r\n    const [selectedTirVideo, setSelectedTirVideo] = useState('');\r\n    const [selectedModel, setSelectedModel] = useState('');\r\n    const [availableModels, setAvailableModels] = useState([]);\r\n    \r\n    // 분석 상태\r\n    const [isAnalyzing, setIsAnalyzing] = useState(false);\r\n    const [rgbFrame, setRgbFrame] = useState(null);\r\n    const [tirFrame, setTirFrame] = useState(null);\r\n    \r\n    // 로딩 상태\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isModelsLoading, setIsModelsLoading] = useState(true);\r\n    const [error, setError] = useState('');\r\n    \r\n    // 비디오 플레이어 상태\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n    const [currentTime, setCurrentTime] = useState(0);\r\n    const [duration, setDuration] = useState(0);\r\n    const [playbackRate, setPlaybackRate] = useState(1);\r\n    \r\n    // 비디오 참조\r\n    const rgbVideoRef = useRef(null);\r\n    const tirVideoRef = useRef(null);\r\n    const isSeeking = useRef(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setIsLoading(true);\r\n            setIsModelsLoading(true);\r\n            \r\n            try {\r\n                // 비디오 목록과 모델 목록을 병렬로 로드\r\n                const [videosResponse, modelsResponse] = await Promise.all([\r\n                    getTestVideos(),\r\n                    getModels()\r\n                ]);\r\n                \r\n                // 비디오 목록 설정\r\n                setTestVideos(videosResponse.data);\r\n                if (videosResponse.data.length > 0) {\r\n                    setSelectedRgbVideo(videosResponse.data[0]);\r\n                    setSelectedTirVideo(videosResponse.data[0]);\r\n                }\r\n                \r\n                // 모델 목록 설정\r\n                setAvailableModels(modelsResponse.data);\r\n                \r\n                // 테스트 모드 전용 모델 설정 (실시간 감시와 분리)\r\n                const savedTestModel = localStorage.getItem('selectedTestModel');\r\n                if (savedTestModel && modelsResponse.data.includes(savedTestModel)) {\r\n                    setSelectedModel(savedTestModel);\r\n                    console.log('저장된 테스트 모델 로드:', savedTestModel);\r\n                } else if (modelsResponse.data.length > 0) {\r\n                    setSelectedModel(modelsResponse.data[0]);\r\n                    console.log('기본 테스트 모델 설정:', modelsResponse.data[0]);\r\n                }\r\n                \r\n                setError('');\r\n            } catch (error) {\r\n                console.error(\"데이터 로딩 실패:\", error);\r\n                setError('데이터를 불러오는데 실패했습니다.');\r\n            } finally {\r\n                setIsLoading(false);\r\n                setIsModelsLoading(false);\r\n            }\r\n        };\r\n        fetchData();\r\n\r\n        // 시험 영상 프레임 수신 구독\r\n        const handleVideoFrame = (data) => {\r\n            console.log('TestModePanel에서 비디오 프레임 수신:', data);\r\n            if (data.camera_id === 'test_video') {\r\n                setRgbFrame(data.rgb);\r\n                setTirFrame(data.tir);\r\n                console.log('테스트 프레임 설정 완료');\r\n            }\r\n        };\r\n\r\n        subscribeToEvent('video_frame', handleVideoFrame);\r\n\r\n        return () => {\r\n            unsubscribeFromEvent('video_frame', handleVideoFrame);\r\n            // 컴포넌트 언마운트 시 분석 중지\r\n            if (isAnalyzing) {\r\n                sendEvent('stop_test_stream', {});\r\n            }\r\n        };\r\n    }, [isAnalyzing]);\r\n\r\n    // 비디오 선택 변경 시 메타데이터 로드 강제\r\n    useEffect(() => {\r\n        if (rgbVideoRef.current && selectedRgbVideo) {\r\n            const video = rgbVideoRef.current;\r\n            video.load(); // 강제 리로드\r\n            \r\n            const checkMetadata = () => {\r\n                if (video.duration && !isNaN(video.duration) && video.duration !== Infinity) {\r\n                    setDuration(video.duration);\r\n                    console.log('RGB 비디오 메타데이터 강제 로드 성공:', video.duration);\r\n                } else {\r\n                    setTimeout(checkMetadata, 100);\r\n                }\r\n            };\r\n            \r\n            setTimeout(checkMetadata, 100);\r\n        }\r\n    }, [selectedRgbVideo]);\r\n\r\n    useEffect(() => {\r\n        if (tirVideoRef.current && selectedTirVideo) {\r\n            const video = tirVideoRef.current;\r\n            video.load(); // 강제 리로드\r\n            console.log('TIR 비디오 강제 리로드');\r\n        }\r\n    }, [selectedTirVideo]);\r\n\r\n    // 비디오 동기화 함수들\r\n    const syncVideos = (targetTime) => {\r\n        if (rgbVideoRef.current && tirVideoRef.current && !isSeeking.current) {\r\n            isSeeking.current = true;\r\n            rgbVideoRef.current.currentTime = targetTime;\r\n            tirVideoRef.current.currentTime = targetTime;\r\n            setTimeout(() => {\r\n                isSeeking.current = false;\r\n            }, 100);\r\n        }\r\n    };\r\n\r\n    const handlePlay = async () => {\r\n        console.log('재생 버튼 클릭됨');\r\n        \r\n        if (!selectedRgbVideo || !selectedTirVideo) {\r\n            console.warn('비디오를 먼저 선택해주세요.');\r\n            return;\r\n        }\r\n\r\n        if (!rgbVideoRef.current || !tirVideoRef.current) {\r\n            console.warn('비디오 참조가 없습니다.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // RGB 비디오 로드 확인 및 재생\r\n            if (rgbVideoRef.current.readyState < 2) {\r\n                console.log('RGB 비디오 로딩 대기 중...');\r\n                rgbVideoRef.current.load();\r\n                await new Promise(resolve => {\r\n                    const checkLoaded = () => {\r\n                        if (rgbVideoRef.current.readyState >= 2) {\r\n                            resolve();\r\n                        } else {\r\n                            setTimeout(checkLoaded, 100);\r\n                        }\r\n                    };\r\n                    checkLoaded();\r\n                });\r\n            }\r\n\r\n            // TIR 비디오 로드 확인 및 재생\r\n            if (tirVideoRef.current.readyState < 2) {\r\n                console.log('TIR 비디오 로딩 대기 중...');\r\n                tirVideoRef.current.load();\r\n                await new Promise(resolve => {\r\n                    const checkLoaded = () => {\r\n                        if (tirVideoRef.current.readyState >= 2) {\r\n                            resolve();\r\n                        } else {\r\n                            setTimeout(checkLoaded, 100);\r\n                        }\r\n                    };\r\n                    checkLoaded();\r\n                });\r\n            }\r\n\r\n            console.log('비디오 재생 시도');\r\n            await Promise.all([\r\n                rgbVideoRef.current.play(),\r\n                tirVideoRef.current.play()\r\n            ]);\r\n            \r\n            console.log('비디오 재생 성공');\r\n        } catch (error) {\r\n            console.error('비디오 재생 실패:', error);\r\n        }\r\n    };\r\n\r\n    const handlePause = () => {\r\n        console.log('일시정지 버튼 클릭됨');\r\n        \r\n        if (rgbVideoRef.current && tirVideoRef.current) {\r\n            try {\r\n                rgbVideoRef.current.pause();\r\n                tirVideoRef.current.pause();\r\n                console.log('비디오 일시정지 성공');\r\n            } catch (e) {\r\n                console.warn('비디오 일시정지 실패:', e);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handlePlaybackRateChange = (rate) => {\r\n        if (rgbVideoRef.current && tirVideoRef.current) {\r\n            rgbVideoRef.current.playbackRate = rate;\r\n            tirVideoRef.current.playbackRate = rate;\r\n            setPlaybackRate(rate);\r\n        }\r\n    };\r\n\r\n    // 비디오 이벤트 핸들러들\r\n    const handleRgbTimeUpdate = () => {\r\n        if (rgbVideoRef.current && !isSeeking.current) {\r\n            setCurrentTime(rgbVideoRef.current.currentTime);\r\n            // TIR 비디오 동기화\r\n            if (tirVideoRef.current && Math.abs(tirVideoRef.current.currentTime - rgbVideoRef.current.currentTime) > 0.5) {\r\n                tirVideoRef.current.currentTime = rgbVideoRef.current.currentTime;\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleRgbLoadedMetadata = () => {\r\n        if (rgbVideoRef.current) {\r\n            const videoDuration = rgbVideoRef.current.duration;\r\n            setDuration(videoDuration);\r\n            console.log('RGB 비디오 메타데이터 로드됨, 길이:', videoDuration);\r\n        }\r\n    };\r\n\r\n    const handleTirLoadedMetadata = () => {\r\n        if (tirVideoRef.current) {\r\n            console.log('TIR 비디오 메타데이터 로드됨, 길이:', tirVideoRef.current.duration);\r\n        }\r\n    };\r\n\r\n    const handleRgbPlay = () => {\r\n        setIsPlaying(true);\r\n        console.log('RGB 비디오 재생 시작');\r\n    };\r\n\r\n    const handleRgbPause = () => {\r\n        setIsPlaying(false);\r\n        console.log('RGB 비디오 일시정지');\r\n    };\r\n\r\n    const handleRgbLoadedData = () => {\r\n        if (rgbVideoRef.current) {\r\n            console.log('RGB 비디오 데이터 로드 완료, readyState:', rgbVideoRef.current.readyState);\r\n        }\r\n    };\r\n\r\n    const handleTirLoadedData = () => {\r\n        if (tirVideoRef.current) {\r\n            console.log('TIR 비디오 데이터 로드 완료, readyState:', tirVideoRef.current.readyState);\r\n        }\r\n    };\r\n\r\n    const handleStartAnalysis = () => {\r\n        if (!selectedRgbVideo || !selectedTirVideo || !selectedModel) {\r\n            setError('RGB 영상, TIR 영상, 그리고 모델을 모두 선택해주세요.');\r\n            return;\r\n        }\r\n\r\n        setError('');\r\n        setRgbFrame(null);\r\n        setTirFrame(null);\r\n        setIsAnalyzing(true);\r\n\r\n        // 백엔드에 분석 시작 요청\r\n        sendEvent('start_test_stream', { \r\n            rgb_filename: selectedRgbVideo,\r\n            tir_filename: selectedTirVideo,\r\n            model: selectedModel\r\n        });\r\n    };\r\n\r\n    const handleStopAnalysis = () => {\r\n        setIsAnalyzing(false);\r\n        sendEvent('stop_test_stream', {});\r\n        setRgbFrame(null);\r\n        setTirFrame(null);\r\n    };\r\n\r\n    const formatTime = (time) => {\r\n        const minutes = Math.floor(time / 60);\r\n        const seconds = Math.floor(time % 60);\r\n        return `${minutes}:${seconds.toString().padStart(2, '0')}`;\r\n    };\r\n    \r\n    return (\r\n        <div className=\"space-y-6\">\r\n            {/* 모델 선택 */}\r\n            <div className=\"p-4 bg-gray-800 rounded-lg shadow-lg\">\r\n                <h3 className=\"text-lg font-semibold mb-3 text-white\">분석 모델 선택</h3>\r\n                <select \r\n                    value={selectedModel} \r\n                    onChange={(e) => {\r\n                        const newModel = e.target.value;\r\n                        setSelectedModel(newModel);\r\n                        // 테스트 모드 전용 모델 저장 (실시간 감시와 분리)\r\n                        localStorage.setItem('selectedTestModel', newModel);\r\n                        console.log('테스트 모드에서 모델 변경:', newModel);\r\n                    }}\r\n                    className=\"w-full px-3 py-2 text-white bg-gray-700 border border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-cyan-500\"\r\n                    disabled={isAnalyzing || isModelsLoading}\r\n                >\r\n                    {isModelsLoading ? (\r\n                        <option>모델 목록을 불러오는 중...</option>\r\n                    ) : availableModels.length > 0 ? (\r\n                        availableModels.map((model) => (\r\n                            <option key={model} value={model}>{model}</option>\r\n                        ))\r\n                    ) : (\r\n                        <option>사용 가능한 모델이 없습니다.</option>\r\n                    )}\r\n                </select>\r\n                \r\n                {/* 모델 정보 */}\r\n                <div className=\"mt-2 text-xs text-gray-400\">\r\n                    <p>models_ai 폴더에서 {availableModels.length}개 모델 발견</p>\r\n                    {selectedModel && (\r\n                        <p>선택된 모델: <span className=\"text-cyan-400 font-mono\">{selectedModel}</span></p>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            {/* 영상 선택 - 2분할 UI */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                {/* RGB 영상 선택 */}\r\n                <div className=\"p-4 bg-gray-800 rounded-lg shadow-lg\">\r\n                    <h3 className=\"text-lg font-semibold mb-3 text-white\">RGB 영상 선택</h3>\r\n                    <select \r\n                        value={selectedRgbVideo} \r\n                        onChange={(e) => {\r\n                            setSelectedRgbVideo(e.target.value);\r\n                            // 비디오 변경 시 상태 초기화\r\n                            setIsPlaying(false);\r\n                            setCurrentTime(0);\r\n                            setDuration(0);\r\n                        }}\r\n                        className=\"w-full px-3 py-2 text-white bg-gray-700 border border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-cyan-500 mb-3\"\r\n                        disabled={isLoading || isAnalyzing}\r\n                    >\r\n                        {isLoading ? (\r\n                            <option>목록을 불러오는 중...</option>\r\n                        ) : testVideos.length > 0 ? (\r\n                            testVideos.map((video) => (\r\n                                <option key={`rgb-${video}`} value={video}>{video}</option>\r\n                            ))\r\n                        ) : (\r\n                            <option>사용 가능한 영상이 없습니다.</option>\r\n                        )}\r\n                    </select>\r\n                </div>\r\n\r\n                {/* TIR 영상 선택 */}\r\n                <div className=\"p-4 bg-gray-800 rounded-lg shadow-lg\">\r\n                    <h3 className=\"text-lg font-semibold mb-3 text-white\">TIR 영상 선택</h3>\r\n                    <select \r\n                        value={selectedTirVideo} \r\n                        onChange={(e) => {\r\n                            setSelectedTirVideo(e.target.value);\r\n                            // 비디오 변경 시 상태 초기화\r\n                            setIsPlaying(false);\r\n                            setCurrentTime(0);\r\n                            setDuration(0);\r\n                        }}\r\n                        className=\"w-full px-3 py-2 text-white bg-gray-700 border border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-cyan-500 mb-3\"\r\n                        disabled={isLoading || isAnalyzing}\r\n                    >\r\n                        {isLoading ? (\r\n                            <option>목록을 불러오는 중...</option>\r\n                        ) : testVideos.length > 0 ? (\r\n                            testVideos.map((video) => (\r\n                                <option key={`tir-${video}`} value={video}>{video}</option>\r\n                            ))\r\n                        ) : (\r\n                            <option>사용 가능한 영상이 없습니다.</option>\r\n                        )}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n            {/* 동기화된 비디오 플레이어 */}\r\n            <div className=\"p-4 bg-gray-800 rounded-lg shadow-lg\">\r\n                <h3 className=\"text-lg font-semibold mb-3 text-white\">동기화된 비디오 플레이어</h3>\r\n                \r\n                {/* 비디오 표시 영역 */}\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\r\n                    {/* RGB 비디오 */}\r\n                    <div className=\"bg-black rounded-md aspect-video relative\">\r\n                        {selectedRgbVideo ? (\r\n                            <>\r\n                                <video\r\n                                    ref={rgbVideoRef}\r\n                                    src={`${process.env.REACT_APP_API_URL}/test_videos/${selectedRgbVideo}`}\r\n                                    className={`w-full h-full object-contain ${isAnalyzing ? 'opacity-50' : ''}`}\r\n                                    onTimeUpdate={handleRgbTimeUpdate}\r\n                                    onLoadedMetadata={handleRgbLoadedMetadata}\r\n                                    onLoadedData={handleRgbLoadedData}\r\n                                    onPlay={handleRgbPlay}\r\n                                    onPause={handleRgbPause}\r\n                                    preload=\"metadata\"\r\n                                    muted\r\n                                />\r\n                                {isAnalyzing && rgbFrame && (\r\n                                    <img \r\n                                        src={`data:image/jpeg;base64,${rgbFrame}`} \r\n                                        alt=\"RGB Analysis Result\" \r\n                                        className=\"absolute top-0 left-0 w-full h-full object-contain\"\r\n                                    />\r\n                                )}\r\n                            </>\r\n                        ) : (\r\n                            <div className=\"flex items-center justify-center h-full text-gray-500\">\r\n                                RGB 영상을 선택해주세요\r\n                            </div>\r\n                        )}\r\n                        <div className=\"absolute top-2 left-2 bg-black bg-opacity-50 text-white px-2 py-1 rounded text-sm\">\r\n                            RGB\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* TIR 비디오 */}\r\n                    <div className=\"bg-black rounded-md aspect-video relative\">\r\n                        {selectedTirVideo ? (\r\n                            <>\r\n                                <video\r\n                                    ref={tirVideoRef}\r\n                                    src={`${process.env.REACT_APP_API_URL}/test_videos/${selectedTirVideo}`}\r\n                                    className={`w-full h-full object-contain ${isAnalyzing ? 'opacity-50' : ''}`}\r\n                                    onLoadedMetadata={handleTirLoadedMetadata}\r\n                                    onLoadedData={handleTirLoadedData}\r\n                                    preload=\"metadata\"\r\n                                    muted\r\n                                />\r\n                                {isAnalyzing && tirFrame && (\r\n                                    <img \r\n                                        src={`data:image/jpeg;base64,${tirFrame}`} \r\n                                        alt=\"TIR Analysis Result\" \r\n                                        className=\"absolute top-0 left-0 w-full h-full object-contain\"\r\n                                    />\r\n                                )}\r\n                            </>\r\n                        ) : (\r\n                            <div className=\"flex items-center justify-center h-full text-gray-500\">\r\n                                TIR 영상을 선택해주세요\r\n                            </div>\r\n                        )}\r\n                        <div className=\"absolute top-2 left-2 bg-black bg-opacity-50 text-white px-2 py-1 rounded text-sm\">\r\n                            TIR\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* 비디오 컨트롤 */}\r\n                <div className=\"space-y-3\">\r\n                    {/* 진행 바 */}\r\n                    <div className=\"flex items-center space-x-2\">\r\n                        <span className=\"text-white text-sm\">{formatTime(currentTime)}</span>\r\n                        <input\r\n                            type=\"range\"\r\n                            min=\"0\"\r\n                            max={duration || 0}\r\n                            value={currentTime}\r\n                            onChange={(e) => {\r\n                                const time = parseFloat(e.target.value);\r\n                                console.log('진행 바 조작:', time, '/', duration);\r\n                                syncVideos(time);\r\n                                setCurrentTime(time);\r\n                            }}\r\n                            disabled={!selectedRgbVideo || !selectedTirVideo}\r\n                            className=\"flex-1 h-2 bg-gray-600 rounded-lg appearance-none cursor-pointer slider\"\r\n                            style={{\r\n                                background: `linear-gradient(to right, #06b6d4 0%, #06b6d4 ${duration > 0 ? (currentTime / duration) * 100 : 0}%, #4b5563 ${duration > 0 ? (currentTime / duration) * 100 : 0}%, #4b5563 100%)`\r\n                            }}\r\n                        />\r\n                        <span className=\"text-white text-sm\">{formatTime(duration)}</span>\r\n                    </div>\r\n                    \r\n                    {/* 디버깅 정보 */}\r\n                    <div className=\"text-xs text-gray-400 space-y-1\">\r\n                        <p>현재 시간: {currentTime.toFixed(2)}s / 총 길이: {duration.toFixed(2)}s</p>\r\n                        <p>재생 상태: {isPlaying ? '재생 중' : '일시정지'}</p>\r\n                        <p>RGB 준비상태: {rgbVideoRef.current ? rgbVideoRef.current.readyState : 'N/A'}</p>\r\n                        <p>TIR 준비상태: {tirVideoRef.current ? tirVideoRef.current.readyState : 'N/A'}</p>\r\n                    </div>\r\n\r\n                    {/* 재생 컨트롤 */}\r\n                    <div className=\"flex items-center justify-center space-x-4\">\r\n                        <button\r\n                            onClick={() => {\r\n                                console.log('버튼 클릭됨, isPlaying:', isPlaying);\r\n                                console.log('RGB 비디오 ref:', !!rgbVideoRef.current);\r\n                                console.log('TIR 비디오 ref:', !!tirVideoRef.current);\r\n                                console.log('선택된 RGB 비디오:', selectedRgbVideo);\r\n                                console.log('선택된 TIR 비디오:', selectedTirVideo);\r\n                                \r\n                                if (isPlaying) {\r\n                                    handlePause();\r\n                                } else {\r\n                                    handlePlay();\r\n                                }\r\n                            }}\r\n                            disabled={!selectedRgbVideo || !selectedTirVideo}\r\n                            className=\"px-4 py-2 bg-cyan-600 hover:bg-cyan-700 disabled:bg-gray-600 text-white rounded-lg transition-colors\"\r\n                        >\r\n                            {isPlaying ? '⏸️ 일시정지' : '▶️ 재생'}\r\n                        </button>\r\n\r\n                        {/* 재생 속도 */}\r\n                        <select\r\n                            value={playbackRate}\r\n                            onChange={(e) => handlePlaybackRateChange(parseFloat(e.target.value))}\r\n                            disabled={!selectedRgbVideo || !selectedTirVideo}\r\n                            className=\"px-2 py-1 bg-gray-700 text-white rounded\"\r\n                        >\r\n                            <option value={0.5}>0.5x</option>\r\n                            <option value={1}>1x</option>\r\n                            <option value={1.5}>1.5x</option>\r\n                            <option value={2}>2x</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* 분석 컨트롤 */}\r\n            <div className=\"flex justify-center space-x-4\">\r\n                {!isAnalyzing ? (\r\n                    <button \r\n                        onClick={handleStartAnalysis} \r\n                        disabled={isLoading || !selectedRgbVideo || !selectedTirVideo || !selectedModel}\r\n                        className=\"px-6 py-2 font-semibold text-white bg-green-600 rounded-lg hover:bg-green-700 disabled:bg-gray-600 disabled:cursor-not-allowed\"\r\n                    >\r\n                        AI 분석 시작\r\n                    </button>\r\n                ) : (\r\n                    <button \r\n                        onClick={handleStopAnalysis} \r\n                        className=\"px-6 py-2 font-semibold text-white bg-red-600 rounded-lg hover:bg-red-700\"\r\n                    >\r\n                        분석 중지\r\n                    </button>\r\n                )}\r\n            </div>\r\n\r\n            {/* 에러 메시지 */}\r\n            {error && (\r\n                <div className=\"p-4 bg-red-800 border border-red-600 rounded-lg\">\r\n                    <p className=\"text-red-200\">{error}</p>\r\n                </div>\r\n            )}\r\n\r\n            {/* 분석 상태 정보 */}\r\n            <div className=\"p-4 bg-gray-800 rounded-lg shadow-lg\">\r\n                <h3 className=\"text-lg font-semibold mb-3 text-white\">분석 상태</h3>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\r\n                    <div>\r\n                        <span className=\"text-gray-400\">선택된 모델:</span>\r\n                        <p className=\"text-white font-mono\">{selectedModel || '선택되지 않음'}</p>\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"text-gray-400\">RGB 영상:</span>\r\n                        <p className=\"text-white font-mono truncate\">{selectedRgbVideo || '선택되지 않음'}</p>\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"text-gray-400\">TIR 영상:</span>\r\n                        <p className=\"text-white font-mono truncate\">{selectedTirVideo || '선택되지 않음'}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mt-2\">\r\n                    <span className=\"text-gray-400\">상태:</span>\r\n                    <span className={`ml-2 px-2 py-1 rounded text-xs font-semibold ${\r\n                        isAnalyzing ? 'bg-green-600 text-white' : 'bg-gray-600 text-gray-300'\r\n                    }`}>\r\n                        {isAnalyzing ? 'AI 분석 중' : '대기 중'}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TestModePanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}