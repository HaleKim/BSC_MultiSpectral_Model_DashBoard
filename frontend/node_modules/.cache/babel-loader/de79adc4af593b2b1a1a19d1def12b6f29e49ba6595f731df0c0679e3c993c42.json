{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project2\\\\DashBoard\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// src/components/Dashboard.js\nimport React, { useEffect, useState, useCallback, useMemo, useRef, useContext } from 'react';\nimport VideoStream from './VideoStream';\nimport EventLog from './EventLog';\nimport TestModePanel from './TestModePanel';\nimport FullscreenViewer from './FullscreenViewer';\nimport EventDetailViewer from './EventDetailViewer';\nimport { initSocket, disconnectSocket, subscribeToEvent, sendEvent, getSocket } from '../services/socket';\nimport { getModels } from '../services/api';\nimport AuthContext from '../context/AuthContext';\nimport alertSound from '../assets/alarm.mp3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  var _liveFrames$viewer$ca;\n  const {\n    user\n  } = useContext(AuthContext);\n  const [serverMessage, setServerMessage] = useState('');\n  const [mode, setMode] = useState('live');\n\n  // 카메라가 1대라면 [0], 2대면 [0,1]로 변경\n  const cameraIds = useMemo(() => [0], []);\n\n  // 프레임/상태\n  const [liveFrames, setLiveFrames] = useState({\n    0: {\n      rgb: null,\n      tir: null\n    }\n  });\n  const [isStreaming, setIsStreaming] = useState({\n    0: false\n  });\n  const [personDetected, setPersonDetected] = useState({\n    0: false\n  });\n\n  // ✅ 모달 상태: 스냅샷이 아니라 \"선택 정보\"만 저장\n  // { cameraId, stream: 'rgb' | 'tir', title }\n  const [viewer, setViewer] = useState(null);\n  const openViewer = (cameraId, stream, title) => setViewer({\n    cameraId,\n    stream,\n    title\n  });\n  const closeViewer = () => setViewer(null);\n\n  // 전체 화면 이벤트 뷰어 상태\n  const [fullViewEvent, setFullViewEvent] = useState(null);\n  const handleOpenFullEvent = event => setFullViewEvent(event);\n  const handleCloseFullEvent = () => setFullViewEvent(null);\n\n  // 모드 전환 중 상태 (백엔드 호환성을 위해 추가)\n  const [isModeChanging, setIsModeChanging] = useState(false);\n\n  // 실시간 감시용 모델 관리\n  const [availableModels, setAvailableModels] = useState([]);\n  const [selectedLiveModel, setSelectedLiveModel] = useState('yolo11n_early_fusion.pt');\n  const [isModelsLoading, setIsModelsLoading] = useState(false);\n  const [showModelSelector, setShowModelSelector] = useState(false);\n  const audioRef = useRef(null);\n\n  // 소켓 연결/해제 및 이벤트 수신 전용 useEffect\n  useEffect(() => {\n    console.log('Dashboard 컴포넌트 마운트 - 소켓 초기화 시작');\n    initSocket();\n\n    // 서버 응답 메시지 수신\n    subscribeToEvent('response', data => {\n      console.log('서버 응답 수신:', data);\n      setServerMessage(data.message);\n    });\n\n    // 비디오 프레임 수신\n    subscribeToEvent('video_frame', data => {\n      console.log('비디오 프레임 수신:', {\n        camera_id: data.camera_id,\n        has_rgb: !!data.rgb,\n        has_tir: !!data.tir,\n        person_detected: data.person_detected\n      });\n      if (typeof data.camera_id === 'number') {\n        console.log(`카메라 ${data.camera_id} 프레임 처리 중...`);\n        setLiveFrames(prev => ({\n          ...prev,\n          [data.camera_id]: {\n            rgb: data.rgb,\n            tir: data.tir\n          }\n        }));\n        setPersonDetected(prev => ({\n          ...prev,\n          [data.camera_id]: data.person_detected\n        }));\n        console.log(`카메라 ${data.camera_id} 프레임 처리 완료`);\n      } else if (data.camera_id === 'test_video') {\n        console.log('시험 영상 프레임 수신');\n      }\n    });\n\n    // 연결 상태 확인 (백엔드 호환성을 위해 추가)\n    const checkConnection = setInterval(() => {\n      const socket = getSocket();\n      if (socket) {\n        console.log('소켓 연결 상태:', socket.connected, 'ID:', socket.id);\n      }\n    }, 5000);\n    return () => {\n      console.log('Dashboard 컴포넌트 언마운트 - 소켓 정리');\n      clearInterval(checkConnection);\n      disconnectSocket();\n    };\n  }, []);\n\n  // 실시간 스트림 시작 함수 (백엔드 호환성을 위해 복원)\n  const startAllStreams = useCallback(async () => {\n    console.log('실시간 스트림 시작 시도...');\n    setIsModeChanging(true);\n    try {\n      // 소켓 연결 상태 확인\n      const socket = getSocket();\n      if (!socket || !socket.connected) {\n        console.error('소켓이 연결되지 않았습니다. 소켓 초기화를 다시 시도합니다.');\n        initSocket();\n        // 잠시 대기 후 다시 시도\n        await new Promise(resolve => setTimeout(resolve, 1000));\n      }\n\n      // 모든 카메라에 대해 스트림 시작 요청\n      for (const id of cameraIds) {\n        console.log(`카메라 ${id + 1} 스트림 시작 요청`);\n        sendEvent('start_stream', {\n          camera_id: id\n        });\n        setIsStreaming(prev => ({\n          ...prev,\n          [id]: true\n        }));\n      }\n\n      // 스트림 상태 초기화\n      setLiveFrames({\n        0: {\n          rgb: null,\n          tir: null\n        }\n      });\n      setPersonDetected({\n        0: false\n      });\n      console.log('실시간 스트림 시작 완료');\n    } catch (error) {\n      console.error('스트림 시작 오류:', error);\n    } finally {\n      setIsModeChanging(false);\n    }\n  }, [cameraIds]);\n\n  // 모든 스트림을 중지하는 함수 (백엔드 호환성을 위해 복원)\n  const stopAllStreams = useCallback(async () => {\n    console.log('모든 스트림 중지 시도...');\n    setIsModeChanging(true);\n    try {\n      // 모든 카메라에 대해 스트림 중지 요청\n      for (const id of cameraIds) {\n        console.log(`카메라 ${id + 1} 스트림 중지 요청`);\n        sendEvent('stop_stream', {\n          camera_id: id\n        });\n      }\n\n      // 스트림 상태 초기화\n      setIsStreaming({\n        0: false\n      });\n      setLiveFrames({\n        0: {\n          rgb: null,\n          tir: null\n        }\n      });\n      setPersonDetected({\n        0: false\n      });\n      console.log('모든 스트림 중지 완료');\n    } catch (error) {\n      console.error('스트림 중지 오류:', error);\n    } finally {\n      setIsModeChanging(false);\n    }\n  }, [cameraIds]);\n\n  // 모드 변경에 따라 스트림 시작/중지 (백엔드 호환성을 위해 수정)\n  useEffect(() => {\n    if (isModeChanging) return; // 모드 변경 중이면 무시\n\n    if (mode === 'live') {\n      console.log('실시간 모드로 전환 - 스트림 시작');\n      // 실시간 모드로 전환 시 즉시 스트림 시작\n      startAllStreams();\n    } else {\n      console.log('시험 모드로 전환 - 스트림 중지');\n      // 시험 모드로 전환 시 즉시 스트림 중지\n      stopAllStreams();\n    }\n  }, [mode, startAllStreams, stopAllStreams, isModeChanging]);\n\n  // 알람음 (옵션)\n  useEffect(() => {\n    if (personDetected[0] && audioRef.current) {\n      audioRef.current.play().catch(error => console.error(\"오디오 재생 오류:\", error));\n    }\n  }, [personDetected]);\n\n  // 관리자 권한 체크 (AdminRoute와 동일한 기준)\n  const isAdmin = user && user.role === 'admin';\n\n  // 디버깅: 사용자 정보 확인\n  useEffect(() => {\n    console.log('현재 사용자 정보:', user);\n    console.log('관리자 권한:', isAdmin);\n    if (user) {\n      console.log('사용자 역할:', user.role);\n    }\n  }, [user, isAdmin]);\n\n  // 관리자용 모델 목록 로드\n  useEffect(() => {\n    if (isAdmin) {\n      const loadModels = async () => {\n        setIsModelsLoading(true);\n        try {\n          const {\n            data\n          } = await getModels();\n          setAvailableModels(data);\n          // 저장된 모델이 있으면 로드, 없으면 첫 번째 모델 선택\n          const savedModel = localStorage.getItem('selectedLiveModel');\n          if (savedModel && data.includes(savedModel)) {\n            setSelectedLiveModel(savedModel);\n          } else if (data.length > 0) {\n            setSelectedLiveModel(data[0]);\n          }\n          console.log('실시간 감시용 모델 목록 로드 완료:', data);\n        } catch (error) {\n          console.error('모델 목록 로드 실패:', error);\n        } finally {\n          setIsModelsLoading(false);\n        }\n      };\n      loadModels();\n    }\n  }, [isAdmin]);\n\n  // 모델 변경 핸들러\n  const handleModelChange = newModel => {\n    setSelectedLiveModel(newModel);\n    localStorage.setItem('selectedLiveModel', newModel);\n    console.log(`실시간 감시 모델 변경: ${newModel}`);\n\n    // 실시간 모드에서 모델이 변경되면 스트림을 재시작\n    if (mode === 'live') {\n      console.log('모델 변경으로 인한 스트림 재시작...');\n      stopAllStreams();\n      setTimeout(() => {\n        startAllStreams();\n      }, 1000);\n    }\n    setShowModelSelector(false);\n  };\n\n  // 모드 변경 핸들러 (백엔드 호환성을 위해 추가)\n  const handleModeChange = newMode => {\n    if (isModeChanging) return; // 모드 변경 중이면 무시\n\n    // 테스트 모드는 관리자만 접근 가능 (AdminRoute와 동일한 체크)\n    if (newMode === 'test' && (!user || user.role !== 'admin')) {\n      alert('테스트 영상 분석 기능은 관리자만 사용할 수 있습니다.');\n      return;\n    }\n    console.log(`모드 변경: ${mode} -> ${newMode}`);\n    setMode(newMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center space-x-4 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleModeChange('live'),\n        disabled: isModeChanging,\n        className: `px-6 py-2 font-bold text-white rounded-lg transition-colors ${mode === 'live' ? 'bg-cyan-600' : 'bg-gray-600 hover:bg-gray-700'} ${isModeChanging ? 'opacity-50 cursor-not-allowed' : ''}`,\n        children: isModeChanging && mode === 'live' ? '전환 중...' : '실시간 다중 감시'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), user && isAdmin && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleModeChange('test'),\n        disabled: isModeChanging,\n        className: `px-6 py-2 font-bold text-white rounded-lg transition-colors ${mode === 'test' ? 'bg-cyan-600' : 'bg-gray-600 hover:bg-gray-700'} ${isModeChanging ? 'opacity-50 cursor-not-allowed' : ''}`,\n        children: isModeChanging && mode === 'test' ? '전환 중...' : '시험 영상 분석 (관리자)'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this), process.env.NODE_ENV === 'development' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs text-gray-400 mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uC0AC\\uC6A9\\uC790: \", user ? user.username : '없음']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uC5ED\\uD560: \", user ? user.role : '없음']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uAD00\\uB9AC\\uC790: \", isAdmin ? '예' : '아니오']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center space-x-4 mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm text-gray-400\",\n          children: \"\\uD604\\uC7AC \\uC2E4\\uC2DC\\uAC04 \\uAC10\\uC2DC \\uBAA8\\uB378:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm font-mono text-cyan-400 bg-gray-800 px-2 py-1 rounded\",\n          children: selectedLiveModel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowModelSelector(!showModelSelector),\n          disabled: isModelsLoading,\n          className: \"text-xs px-3 py-1 bg-blue-600 hover:bg-blue-700 text-white rounded transition-colors disabled:bg-gray-600\",\n          children: isModelsLoading ? '로딩중...' : '모델 변경'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this), showModelSelector && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-800 rounded-lg p-4 shadow-lg border border-gray-600\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-white font-semibold mb-3\",\n            children: \"\\uC2E4\\uC2DC\\uAC04 \\uAC10\\uC2DC \\uBAA8\\uB378 \\uC120\\uD0DD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: availableModels.map(model => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleModelChange(model),\n              className: `w-full text-left px-3 py-2 rounded transition-colors font-mono text-sm ${model === selectedLiveModel ? 'bg-cyan-600 text-white' : 'bg-gray-700 text-gray-300 hover:bg-gray-600'}`,\n              children: [model, model === selectedLiveModel && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-2 text-xs\",\n                children: \"(\\uD604\\uC7AC \\uC120\\uD0DD\\uB428)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 25\n              }, this)]\n            }, model, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3 text-xs text-gray-400\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\uCD1D \", availableModels.length, \"\\uAC1C \\uBAA8\\uB378 \\uC0AC\\uC6A9 \\uAC00\\uB2A5\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\uBAA8\\uB378 \\uBCC0\\uACBD \\uC2DC \\uC2E4\\uC2DC\\uAC04 \\uC2A4\\uD2B8\\uB9BC\\uC774 \\uC7AC\\uC2DC\\uC791\\uB429\\uB2C8\\uB2E4.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowModelSelector(false),\n            className: \"mt-3 w-full px-3 py-1 bg-gray-600 hover:bg-gray-500 text-white rounded text-sm\",\n            children: \"\\uB2EB\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 9\n    }, this), isModeChanging && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mb-4 p-2 bg-blue-900 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-6 w-6 border-b-2 border-white mx-auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-white mt-2\",\n        children: \"\\uBAA8\\uB4DC \\uC804\\uD658 \\uC911...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 lg:grid-cols-3 gap-6 lg:items-start\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lg:col-span-2 space-y-6\",\n        children: mode === 'live' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 gap-4\",\n          children: cameraIds.map(cameraId => {\n            var _liveFrames$cameraId, _liveFrames$cameraId2;\n            return /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(VideoStream, {\n                title: `카메라 ${cameraId + 1} - RGB`,\n                frameData: (_liveFrames$cameraId = liveFrames[cameraId]) === null || _liveFrames$cameraId === void 0 ? void 0 : _liveFrames$cameraId.rgb,\n                isStreaming: isStreaming[cameraId],\n                onStreamClick: () => openViewer(cameraId, 'rgb', `카메라 ${cameraId + 1} - RGB`),\n                personDetected: personDetected[cameraId]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(VideoStream, {\n                title: `카메라 ${cameraId + 1} - TIR`,\n                frameData: (_liveFrames$cameraId2 = liveFrames[cameraId]) === null || _liveFrames$cameraId2 === void 0 ? void 0 : _liveFrames$cameraId2.tir,\n                isStreaming: isStreaming[cameraId],\n                onStreamClick: () => openViewer(cameraId, 'tir', `카메라 ${cameraId + 1} - TIR`),\n                personDetected: personDetected[cameraId]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 19\n              }, this)]\n            }, `${cameraId}-rgb`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(TestModePanel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-6 h-full\",\n        children: [serverMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 bg-blue-900 rounded-lg text-center mb-4\",\n          children: serverMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(EventLog, {\n          onOpenFull: handleOpenFullEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this), viewer && /*#__PURE__*/_jsxDEV(FullscreenViewer, {\n      title: viewer.title,\n      frameData: (_liveFrames$viewer$ca = liveFrames[viewer.cameraId]) === null || _liveFrames$viewer$ca === void 0 ? void 0 : _liveFrames$viewer$ca[viewer.stream],\n      onClose: closeViewer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 9\n    }, this), fullViewEvent && /*#__PURE__*/_jsxDEV(EventDetailViewer, {\n      event: fullViewEvent,\n      onClose: handleCloseFullEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: alertSound\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"3Tw2u6xYmCEMcZhIomsPwRAPS8Y=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","useMemo","useRef","useContext","VideoStream","EventLog","TestModePanel","FullscreenViewer","EventDetailViewer","initSocket","disconnectSocket","subscribeToEvent","sendEvent","getSocket","getModels","AuthContext","alertSound","jsxDEV","_jsxDEV","Dashboard","_s","_liveFrames$viewer$ca","user","serverMessage","setServerMessage","mode","setMode","cameraIds","liveFrames","setLiveFrames","rgb","tir","isStreaming","setIsStreaming","personDetected","setPersonDetected","viewer","setViewer","openViewer","cameraId","stream","title","closeViewer","fullViewEvent","setFullViewEvent","handleOpenFullEvent","event","handleCloseFullEvent","isModeChanging","setIsModeChanging","availableModels","setAvailableModels","selectedLiveModel","setSelectedLiveModel","isModelsLoading","setIsModelsLoading","showModelSelector","setShowModelSelector","audioRef","console","log","data","message","camera_id","has_rgb","has_tir","person_detected","prev","checkConnection","setInterval","socket","connected","id","clearInterval","startAllStreams","error","Promise","resolve","setTimeout","stopAllStreams","current","play","catch","isAdmin","role","loadModels","savedModel","localStorage","getItem","includes","length","handleModelChange","newModel","setItem","handleModeChange","newMode","alert","children","className","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","process","env","NODE_ENV","username","map","model","_liveFrames$cameraId","_liveFrames$cameraId2","Fragment","frameData","onStreamClick","onOpenFull","onClose","ref","src","_c","$RefreshReg$"],"sources":["D:/Project2/DashBoard/frontend/src/components/Dashboard.js"],"sourcesContent":["// src/components/Dashboard.js\r\nimport React, { useEffect, useState, useCallback, useMemo, useRef, useContext } from 'react';\r\nimport VideoStream from './VideoStream';\r\nimport EventLog from './EventLog';\r\nimport TestModePanel from './TestModePanel';\r\nimport FullscreenViewer from './FullscreenViewer';\r\nimport EventDetailViewer from './EventDetailViewer';\r\nimport { initSocket, disconnectSocket, subscribeToEvent, sendEvent, getSocket } from '../services/socket';\r\nimport { getModels } from '../services/api';\r\nimport AuthContext from '../context/AuthContext';\r\nimport alertSound from '../assets/alarm.mp3';\r\n\r\nconst Dashboard = () => {\r\n  const { user } = useContext(AuthContext);\r\n  const [serverMessage, setServerMessage] = useState('');\r\n  const [mode, setMode] = useState('live');\r\n\r\n  // 카메라가 1대라면 [0], 2대면 [0,1]로 변경\r\n  const cameraIds = useMemo(() => [0], []);\r\n\r\n  // 프레임/상태\r\n  const [liveFrames, setLiveFrames] = useState({ 0: { rgb: null, tir: null } });\r\n  const [isStreaming, setIsStreaming] = useState({ 0: false });\r\n  const [personDetected, setPersonDetected] = useState({ 0: false });\r\n\r\n  // ✅ 모달 상태: 스냅샷이 아니라 \"선택 정보\"만 저장\r\n  // { cameraId, stream: 'rgb' | 'tir', title }\r\n  const [viewer, setViewer] = useState(null);\r\n  const openViewer = (cameraId, stream, title) => setViewer({ cameraId, stream, title });\r\n  const closeViewer = () => setViewer(null);\r\n\r\n  // 전체 화면 이벤트 뷰어 상태\r\n  const [fullViewEvent, setFullViewEvent] = useState(null);\r\n  const handleOpenFullEvent = (event) => setFullViewEvent(event);\r\n  const handleCloseFullEvent = () => setFullViewEvent(null);\r\n\r\n  // 모드 전환 중 상태 (백엔드 호환성을 위해 추가)\r\n  const [isModeChanging, setIsModeChanging] = useState(false);\r\n\r\n  // 실시간 감시용 모델 관리\r\n  const [availableModels, setAvailableModels] = useState([]);\r\n  const [selectedLiveModel, setSelectedLiveModel] = useState('yolo11n_early_fusion.pt');\r\n  const [isModelsLoading, setIsModelsLoading] = useState(false);\r\n  const [showModelSelector, setShowModelSelector] = useState(false);\r\n\r\n  const audioRef = useRef(null);\r\n\r\n  // 소켓 연결/해제 및 이벤트 수신 전용 useEffect\r\n  useEffect(() => {\r\n    console.log('Dashboard 컴포넌트 마운트 - 소켓 초기화 시작');\r\n    initSocket();\r\n    \r\n    // 서버 응답 메시지 수신\r\n    subscribeToEvent('response', (data) => { \r\n      console.log('서버 응답 수신:', data);\r\n      setServerMessage(data.message); \r\n    });\r\n    \r\n    // 비디오 프레임 수신\r\n    subscribeToEvent('video_frame', (data) => {\r\n      console.log('비디오 프레임 수신:', {\r\n        camera_id: data.camera_id,\r\n        has_rgb: !!data.rgb,\r\n        has_tir: !!data.tir,\r\n        person_detected: data.person_detected\r\n      });\r\n      \r\n      if (typeof data.camera_id === 'number') {\r\n        console.log(`카메라 ${data.camera_id} 프레임 처리 중...`);\r\n        setLiveFrames(prev => ({ ...prev, [data.camera_id]: { rgb: data.rgb, tir: data.tir } }));\r\n        setPersonDetected(prev => ({ ...prev, [data.camera_id]: data.person_detected }));\r\n        console.log(`카메라 ${data.camera_id} 프레임 처리 완료`);\r\n      } else if (data.camera_id === 'test_video') {\r\n        console.log('시험 영상 프레임 수신');\r\n      }\r\n    });\r\n    \r\n    // 연결 상태 확인 (백엔드 호환성을 위해 추가)\r\n    const checkConnection = setInterval(() => {\r\n      const socket = getSocket();\r\n      if (socket) {\r\n        console.log('소켓 연결 상태:', socket.connected, 'ID:', socket.id);\r\n      }\r\n    }, 5000);\r\n    \r\n    return () => { \r\n      console.log('Dashboard 컴포넌트 언마운트 - 소켓 정리');\r\n      clearInterval(checkConnection);\r\n      disconnectSocket(); \r\n    };\r\n  }, []);\r\n\r\n  // 실시간 스트림 시작 함수 (백엔드 호환성을 위해 복원)\r\n  const startAllStreams = useCallback(async () => {\r\n    console.log('실시간 스트림 시작 시도...');\r\n    setIsModeChanging(true);\r\n    \r\n    try {\r\n      // 소켓 연결 상태 확인\r\n      const socket = getSocket();\r\n      if (!socket || !socket.connected) {\r\n        console.error('소켓이 연결되지 않았습니다. 소켓 초기화를 다시 시도합니다.');\r\n        initSocket();\r\n        // 잠시 대기 후 다시 시도\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n      }\r\n      \r\n      // 모든 카메라에 대해 스트림 시작 요청\r\n      for (const id of cameraIds) {\r\n        console.log(`카메라 ${id + 1} 스트림 시작 요청`);\r\n        sendEvent('start_stream', { camera_id: id });\r\n        setIsStreaming(prev => ({ ...prev, [id]: true }));\r\n      }\r\n      \r\n      // 스트림 상태 초기화\r\n      setLiveFrames({ 0: { rgb: null, tir: null } });\r\n      setPersonDetected({ 0: false });\r\n      \r\n      console.log('실시간 스트림 시작 완료');\r\n    } catch (error) {\r\n      console.error('스트림 시작 오류:', error);\r\n    } finally {\r\n      setIsModeChanging(false);\r\n    }\r\n  }, [cameraIds]);\r\n\r\n  // 모든 스트림을 중지하는 함수 (백엔드 호환성을 위해 복원)\r\n  const stopAllStreams = useCallback(async () => {\r\n    console.log('모든 스트림 중지 시도...');\r\n    setIsModeChanging(true);\r\n    \r\n    try {\r\n      // 모든 카메라에 대해 스트림 중지 요청\r\n      for (const id of cameraIds) {\r\n        console.log(`카메라 ${id + 1} 스트림 중지 요청`);\r\n        sendEvent('stop_stream', { camera_id: id });\r\n      }\r\n      \r\n      // 스트림 상태 초기화\r\n      setIsStreaming({ 0: false });\r\n      setLiveFrames({ 0: { rgb: null, tir: null } });\r\n      setPersonDetected({ 0: false });\r\n      \r\n      console.log('모든 스트림 중지 완료');\r\n    } catch (error) {\r\n      console.error('스트림 중지 오류:', error);\r\n    } finally {\r\n      setIsModeChanging(false);\r\n    }\r\n  }, [cameraIds]);\r\n\r\n  // 모드 변경에 따라 스트림 시작/중지 (백엔드 호환성을 위해 수정)\r\n  useEffect(() => {\r\n    if (isModeChanging) return; // 모드 변경 중이면 무시\r\n    \r\n    if (mode === 'live') {\r\n      console.log('실시간 모드로 전환 - 스트림 시작');\r\n      // 실시간 모드로 전환 시 즉시 스트림 시작\r\n      startAllStreams();\r\n    } else {\r\n      console.log('시험 모드로 전환 - 스트림 중지');\r\n      // 시험 모드로 전환 시 즉시 스트림 중지\r\n      stopAllStreams();\r\n    }\r\n  }, [mode, startAllStreams, stopAllStreams, isModeChanging]);\r\n\r\n  // 알람음 (옵션)\r\n  useEffect(() => {\r\n    if (personDetected[0] && audioRef.current) {\r\n      audioRef.current.play().catch(error => console.error(\"오디오 재생 오류:\", error));\r\n    }\r\n  }, [personDetected]);\r\n\r\n  // 관리자 권한 체크 (AdminRoute와 동일한 기준)\r\n  const isAdmin = user && user.role === 'admin';\r\n  \r\n  // 디버깅: 사용자 정보 확인\r\n  useEffect(() => {\r\n    console.log('현재 사용자 정보:', user);\r\n    console.log('관리자 권한:', isAdmin);\r\n    if (user) {\r\n      console.log('사용자 역할:', user.role);\r\n    }\r\n  }, [user, isAdmin]);\r\n\r\n  // 관리자용 모델 목록 로드\r\n  useEffect(() => {\r\n    if (isAdmin) {\r\n      const loadModels = async () => {\r\n        setIsModelsLoading(true);\r\n        try {\r\n          const { data } = await getModels();\r\n          setAvailableModels(data);\r\n          // 저장된 모델이 있으면 로드, 없으면 첫 번째 모델 선택\r\n          const savedModel = localStorage.getItem('selectedLiveModel');\r\n          if (savedModel && data.includes(savedModel)) {\r\n            setSelectedLiveModel(savedModel);\r\n          } else if (data.length > 0) {\r\n            setSelectedLiveModel(data[0]);\r\n          }\r\n          console.log('실시간 감시용 모델 목록 로드 완료:', data);\r\n        } catch (error) {\r\n          console.error('모델 목록 로드 실패:', error);\r\n        } finally {\r\n          setIsModelsLoading(false);\r\n        }\r\n      };\r\n      loadModels();\r\n    }\r\n  }, [isAdmin]);\r\n\r\n  // 모델 변경 핸들러\r\n  const handleModelChange = (newModel) => {\r\n    setSelectedLiveModel(newModel);\r\n    localStorage.setItem('selectedLiveModel', newModel);\r\n    console.log(`실시간 감시 모델 변경: ${newModel}`);\r\n    \r\n    // 실시간 모드에서 모델이 변경되면 스트림을 재시작\r\n    if (mode === 'live') {\r\n      console.log('모델 변경으로 인한 스트림 재시작...');\r\n      stopAllStreams();\r\n      setTimeout(() => {\r\n        startAllStreams();\r\n      }, 1000);\r\n    }\r\n    \r\n    setShowModelSelector(false);\r\n  };\r\n\r\n  // 모드 변경 핸들러 (백엔드 호환성을 위해 추가)\r\n  const handleModeChange = (newMode) => {\r\n    if (isModeChanging) return; // 모드 변경 중이면 무시\r\n    \r\n    // 테스트 모드는 관리자만 접근 가능 (AdminRoute와 동일한 체크)\r\n    if (newMode === 'test' && (!user || user.role !== 'admin')) {\r\n      alert('테스트 영상 분석 기능은 관리자만 사용할 수 있습니다.');\r\n      return;\r\n    }\r\n    \r\n    console.log(`모드 변경: ${mode} -> ${newMode}`);\r\n    setMode(newMode);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* 상단 모드 토글 */}\r\n      <div className=\"flex justify-center space-x-4 mb-4\">\r\n        <button\r\n          onClick={() => handleModeChange('live')}\r\n          disabled={isModeChanging}\r\n          className={`px-6 py-2 font-bold text-white rounded-lg transition-colors ${\r\n            mode === 'live' ? 'bg-cyan-600' : 'bg-gray-600 hover:bg-gray-700'\r\n          } ${isModeChanging ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n        >\r\n          {isModeChanging && mode === 'live' ? '전환 중...' : '실시간 다중 감시'}\r\n        </button>\r\n        {user && isAdmin && (\r\n          <button\r\n            onClick={() => handleModeChange('test')}\r\n            disabled={isModeChanging}\r\n            className={`px-6 py-2 font-bold text-white rounded-lg transition-colors ${\r\n              mode === 'test' ? 'bg-cyan-600' : 'bg-gray-600 hover:bg-gray-700'\r\n            } ${isModeChanging ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n          >\r\n            {isModeChanging && mode === 'test' ? '전환 중...' : '시험 영상 분석 (관리자)'}\r\n          </button>\r\n        )}\r\n        \r\n        {/* 임시 디버깅 정보 */}\r\n        {process.env.NODE_ENV === 'development' && (\r\n          <div className=\"text-xs text-gray-400 mt-2\">\r\n            <p>사용자: {user ? user.username : '없음'}</p>\r\n            <p>역할: {user ? user.role : '없음'}</p>\r\n            <p>관리자: {isAdmin ? '예' : '아니오'}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* 관리자용 실시간 모델 선택 & 현재 모델 표시 */}\r\n      {isAdmin && (\r\n        <div className=\"mb-4\">\r\n          {/* 현재 사용 중인 모델 표시 */}\r\n          <div className=\"flex justify-center items-center space-x-4 mb-2\">\r\n            <span className=\"text-sm text-gray-400\">현재 실시간 감시 모델:</span>\r\n            <span className=\"text-sm font-mono text-cyan-400 bg-gray-800 px-2 py-1 rounded\">\r\n              {selectedLiveModel}\r\n            </span>\r\n            <button\r\n              onClick={() => setShowModelSelector(!showModelSelector)}\r\n              disabled={isModelsLoading}\r\n              className=\"text-xs px-3 py-1 bg-blue-600 hover:bg-blue-700 text-white rounded transition-colors disabled:bg-gray-600\"\r\n            >\r\n              {isModelsLoading ? '로딩중...' : '모델 변경'}\r\n            </button>\r\n          </div>\r\n\r\n          {/* 모델 선택 드롭다운 */}\r\n          {showModelSelector && (\r\n            <div className=\"flex justify-center\">\r\n              <div className=\"bg-gray-800 rounded-lg p-4 shadow-lg border border-gray-600\">\r\n                <h4 className=\"text-white font-semibold mb-3\">실시간 감시 모델 선택</h4>\r\n                <div className=\"space-y-2\">\r\n                  {availableModels.map((model) => (\r\n                    <button\r\n                      key={model}\r\n                      onClick={() => handleModelChange(model)}\r\n                      className={`w-full text-left px-3 py-2 rounded transition-colors font-mono text-sm ${\r\n                        model === selectedLiveModel\r\n                          ? 'bg-cyan-600 text-white'\r\n                          : 'bg-gray-700 text-gray-300 hover:bg-gray-600'\r\n                      }`}\r\n                    >\r\n                      {model}\r\n                      {model === selectedLiveModel && (\r\n                        <span className=\"ml-2 text-xs\">(현재 선택됨)</span>\r\n                      )}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n                <div className=\"mt-3 text-xs text-gray-400\">\r\n                  <p>총 {availableModels.length}개 모델 사용 가능</p>\r\n                  <p>모델 변경 시 실시간 스트림이 재시작됩니다.</p>\r\n                </div>\r\n                <button\r\n                  onClick={() => setShowModelSelector(false)}\r\n                  className=\"mt-3 w-full px-3 py-1 bg-gray-600 hover:bg-gray-500 text-white rounded text-sm\"\r\n                >\r\n                  닫기\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* 모드 전환 중 표시 (백엔드 호환성을 위해 추가) */}\r\n      {isModeChanging && (\r\n        <div className=\"text-center mb-4 p-2 bg-blue-900 rounded-lg\">\r\n          <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-white mx-auto\"></div>\r\n          <p className=\"text-white mt-2\">모드 전환 중...</p>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 lg:items-start\">\r\n        <div className=\"lg:col-span-2 space-y-6\">\r\n          {mode === 'live' ? (\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              {cameraIds.map(cameraId => (\r\n                <React.Fragment key={`${cameraId}-rgb`}>\r\n                  <VideoStream\r\n                    title={`카메라 ${cameraId + 1} - RGB`}\r\n                    frameData={liveFrames[cameraId]?.rgb}\r\n                    isStreaming={isStreaming[cameraId]}\r\n                    onStreamClick={() => openViewer(cameraId, 'rgb', `카메라 ${cameraId + 1} - RGB`)}\r\n                    personDetected={personDetected[cameraId]}\r\n                  />\r\n                  <VideoStream\r\n                    title={`카메라 ${cameraId + 1} - TIR`}\r\n                    frameData={liveFrames[cameraId]?.tir}\r\n                    isStreaming={isStreaming[cameraId]}\r\n                    onStreamClick={() => openViewer(cameraId, 'tir', `카메라 ${cameraId + 1} - TIR`)}\r\n                    personDetected={personDetected[cameraId]}\r\n                  />\r\n                </React.Fragment>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <TestModePanel />\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"space-y-6 h-full\">\r\n          {serverMessage && (\r\n            <div className=\"p-4 bg-blue-900 rounded-lg text-center mb-4\">{serverMessage}</div>\r\n          )}\r\n          <EventLog onOpenFull={handleOpenFullEvent} />\r\n        </div>\r\n      </div>\r\n\r\n      {/* ✅ 모달: 현재 liveFrames에서 프레임을 꺼내 전달 → 실시간 갱신 */}\r\n      {viewer && (\r\n        <FullscreenViewer\r\n          title={viewer.title}\r\n          frameData={liveFrames[viewer.cameraId]?.[viewer.stream]}\r\n          onClose={closeViewer}\r\n        />\r\n      )}\r\n\r\n      {/* 이벤트 상세 뷰어 렌더링 */}\r\n      {fullViewEvent && (\r\n        <EventDetailViewer event={fullViewEvent} onClose={handleCloseFullEvent} />\r\n      )}\r\n\r\n      <audio ref={audioRef} src={alertSound} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}