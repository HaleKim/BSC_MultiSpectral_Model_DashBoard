{"ast":null,"code":"import axios from 'axios';\n\n// 백엔드 API 서버와 통신하기 위한 Axios 인스턴스 생성\nconst apiClient = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// 요청 인터셉터: 모든 요청에 JWT 토큰을 포함시킵니다.\napiClient.interceptors.request.use(config => {\n  const token = localStorage.getItem('accessToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// 로그인 요청\nexport const login = (username, password) => {\n  return apiClient.post('/api/auth/login', {\n    username,\n    password\n  });\n};\n\n// 프로필 정보 요청\nexport const getProfile = () => {\n  return apiClient.get('/api/auth/profile');\n};\n\n// 모델 목록 요청\nexport const getModels = () => {\n  return apiClient.get('/api/models');\n};\n\n// 이벤트 목록 요청\nexport const getEvents = () => {\n  return apiClient.get('/api/events');\n};","map":{"version":3,"names":["axios","apiClient","create","baseURL","process","env","REACT_APP_API_URL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","login","username","password","post","getProfile","get","getModels","getEvents"],"sources":["D:/Project2/DashBoard/ver.2/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// 백엔드 API 서버와 통신하기 위한 Axios 인스턴스 생성\r\nconst apiClient = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// 요청 인터셉터: 모든 요청에 JWT 토큰을 포함시킵니다.\r\napiClient.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('accessToken');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// 로그인 요청\r\nexport const login = (username, password) => {\r\n  return apiClient.post('/api/auth/login', { username, password });\r\n};\r\n\r\n// 프로필 정보 요청\r\nexport const getProfile = () => {\r\n  return apiClient.get('/api/auth/profile');\r\n};\r\n\r\n// 모델 목록 요청\r\nexport const getModels = () => {\r\n    return apiClient.get('/api/models');\r\n};\r\n\r\n// 이벤트 목록 요청\r\nexport const getEvents = () => {\r\n    return apiClient.get('/api/events');\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC7BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB;EACtCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAN,SAAS,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CAC/BC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EACjD,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMG,KAAK,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;EAC3C,OAAOpB,SAAS,CAACqB,IAAI,CAAC,iBAAiB,EAAE;IAAEF,QAAQ;IAAEC;EAAS,CAAC,CAAC;AAClE,CAAC;;AAED;AACA,OAAO,MAAME,UAAU,GAAGA,CAAA,KAAM;EAC9B,OAAOtB,SAAS,CAACuB,GAAG,CAAC,mBAAmB,CAAC;AAC3C,CAAC;;AAED;AACA,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAC3B,OAAOxB,SAAS,CAACuB,GAAG,CAAC,aAAa,CAAC;AACvC,CAAC;;AAED;AACA,OAAO,MAAME,SAAS,GAAGA,CAAA,KAAM;EAC3B,OAAOzB,SAAS,CAACuB,GAAG,CAAC,aAAa,CAAC;AACvC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}