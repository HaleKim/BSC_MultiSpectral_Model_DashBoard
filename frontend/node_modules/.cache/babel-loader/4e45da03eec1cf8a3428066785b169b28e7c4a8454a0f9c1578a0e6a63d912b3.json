{"ast":null,"code":"// src/services/socket.js\nimport { io } from 'socket.io-client';\nlet socket;\nexport const initSocket = () => {\n  if (socket) return;\n  socket = io(process.env.REACT_APP_API_URL);\n  socket.on('connect', () => {\n    console.log('Socket.IO 서버에 연결되었습니다.');\n  });\n  socket.on('disconnect', () => {\n    console.log('Socket.IO 서버 연결이 끊어졌습니다.');\n    socket = null;\n  });\n  return socket;\n};\nexport const disconnectSocket = () => {\n  if (socket) {\n    socket.disconnect();\n    socket = null;\n  }\n};\nexport const sendEvent = (eventName, data) => {\n  if (socket) {\n    socket.emit(eventName, data);\n  }\n};\nexport const subscribeToEvent = (eventName, callback) => {\n  if (!socket) return;\n  socket.on(eventName, callback);\n};\nexport const unsubscribeFromEvent = eventName => {\n  if (!socket) return;\n  socket.off(eventName);\n};","map":{"version":3,"names":["io","socket","initSocket","process","env","REACT_APP_API_URL","on","console","log","disconnectSocket","disconnect","sendEvent","eventName","data","emit","subscribeToEvent","callback","unsubscribeFromEvent","off"],"sources":["D:/Project2/DashBoard/frontend/src/services/socket.js"],"sourcesContent":["// src/services/socket.js\r\nimport { io } from 'socket.io-client';\r\n\r\nlet socket;\r\n\r\nexport const initSocket = () => {\r\n  if (socket) return;\r\n  socket = io(process.env.REACT_APP_API_URL);\r\n\r\n  socket.on('connect', () => {\r\n    console.log('Socket.IO 서버에 연결되었습니다.');\r\n  });\r\n\r\n  socket.on('disconnect', () => {\r\n    console.log('Socket.IO 서버 연결이 끊어졌습니다.');\r\n    socket = null;\r\n  });\r\n  return socket;\r\n};\r\n\r\nexport const disconnectSocket = () => {\r\n  if (socket) {\r\n    socket.disconnect();\r\n    socket = null;\r\n  }\r\n};\r\n\r\nexport const sendEvent = (eventName, data) => {\r\n  if (socket) {\r\n    socket.emit(eventName, data);\r\n  }\r\n};\r\n\r\nexport const subscribeToEvent = (eventName, callback) => {\r\n  if (!socket) return;\r\n  socket.on(eventName, callback);\r\n};\r\n\r\nexport const unsubscribeFromEvent = (eventName) => {\r\n  if (!socket) return;\r\n  socket.off(eventName);\r\n}"],"mappings":"AAAA;AACA,SAASA,EAAE,QAAQ,kBAAkB;AAErC,IAAIC,MAAM;AAEV,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAC9B,IAAID,MAAM,EAAE;EACZA,MAAM,GAAGD,EAAE,CAACG,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAAC;EAE1CJ,MAAM,CAACK,EAAE,CAAC,SAAS,EAAE,MAAM;IACzBC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;EACvC,CAAC,CAAC;EAEFP,MAAM,CAACK,EAAE,CAAC,YAAY,EAAE,MAAM;IAC5BC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IACvCP,MAAM,GAAG,IAAI;EACf,CAAC,CAAC;EACF,OAAOA,MAAM;AACf,CAAC;AAED,OAAO,MAAMQ,gBAAgB,GAAGA,CAAA,KAAM;EACpC,IAAIR,MAAM,EAAE;IACVA,MAAM,CAACS,UAAU,CAAC,CAAC;IACnBT,MAAM,GAAG,IAAI;EACf;AACF,CAAC;AAED,OAAO,MAAMU,SAAS,GAAGA,CAACC,SAAS,EAAEC,IAAI,KAAK;EAC5C,IAAIZ,MAAM,EAAE;IACVA,MAAM,CAACa,IAAI,CAACF,SAAS,EAAEC,IAAI,CAAC;EAC9B;AACF,CAAC;AAED,OAAO,MAAME,gBAAgB,GAAGA,CAACH,SAAS,EAAEI,QAAQ,KAAK;EACvD,IAAI,CAACf,MAAM,EAAE;EACbA,MAAM,CAACK,EAAE,CAACM,SAAS,EAAEI,QAAQ,CAAC;AAChC,CAAC;AAED,OAAO,MAAMC,oBAAoB,GAAIL,SAAS,IAAK;EACjD,IAAI,CAACX,MAAM,EAAE;EACbA,MAAM,CAACiB,GAAG,CAACN,SAAS,CAAC;AACvB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}