{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project2\\\\DashBoard\\\\ver_2\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// /frontend/src/components/Dashboard.js (최종 수정본)\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport VideoStream from './VideoStream';\nimport EventLog from './EventLog';\nimport TestModePanel from './TestModePanel';\nimport FullscreenViewer from './FullscreenViewer';\nimport { initSocket, disconnectSocket, subscribeToEvent, sendEvent } from '../services/socket';\nimport alertSound from '../assets/alarm.mp3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  var _liveFrames$, _liveFrames$3, _liveFrames$5, _liveFrames$7;\n  const [serverMessage, setServerMessage] = useState('');\n  const [mode, setMode] = useState('live');\n\n  // 로컬 PC 웹캠 ID 목록\n  const cameraIds = [0, 1];\n\n  // 각 카메라의 프레임과 스트리밍 상태를 객체로 관리\n  const [liveFrames, setLiveFrames] = useState({\n    0: {\n      rgb: null,\n      tir: null\n    },\n    1: {\n      rgb: null,\n      tir: null\n    }\n  });\n  const [isStreaming, setIsStreaming] = useState({\n    0: false,\n    1: false\n  });\n\n  // 전체 화면으로 표시할 스트림의 상태\n  const [fullscreenStream, setFullscreenStream] = useState(null);\n\n  // 각 카메라별 사람 탐지 여부 상태\n  const [personDetected, setPersonDetected] = useState({\n    0: false,\n    1: false\n  });\n  // 소리 재생을 위한 ref\n  const audioRef = useRef(null);\n\n  // VideoStream 컴포넌트를 클릭했을 때 호출될 함수\n  const handleStreamClick = (title, frameData) => {\n    // if (frameData) {\n    setFullscreenStream({\n      title,\n      frameData\n    });\n    // }\n  };\n\n  // 전체 화면 뷰어를 닫는 함수\n  const handleCloseFullscreen = () => {\n    setFullscreenStream(null);\n  };\n\n  // 1. 소켓 연결/해제 전용 useEffect (컴포넌트 로드/언로드 시 딱 한 번만 실행)\n  useEffect(() => {\n    initSocket();\n    subscribeToEvent('response', data => {\n      setServerMessage(data.message);\n    });\n    subscribeToEvent('video_frame', data => {\n      if (typeof data.camera_id === 'number') {\n        setLiveFrames(prev => ({\n          ...prev,\n          [data.camera_id]: {\n            rgb: data.rgb,\n            tir: data.tir\n          }\n        }));\n        // 백엔드로부터 받은 person_detected 플래그로 상태 업데이트\n        setPersonDetected(prev => ({\n          ...prev,\n          [data.camera_id]: data.person_detected\n        }));\n      }\n    });\n\n    // 컴포넌트가 사라질 때 소켓 연결을 완전히 해제\n    return () => {\n      disconnectSocket();\n    };\n  }, []); // <-- 의존성 배열을 비워서 최초 1회만 실행되도록 함\n\n  // 2. 스트림 시작/중지 전용 useEffect (mode가 바뀔 때만 실행)\n  useEffect(() => {\n    const startAllStreams = () => {\n      cameraIds.forEach(id => {\n        sendEvent('start_stream', {\n          camera_id: id\n        });\n        setIsStreaming(prev => ({\n          ...prev,\n          [id]: true\n        }));\n      });\n    };\n    const stopAllStreams = () => {\n      cameraIds.forEach(id => {\n        sendEvent('stop_stream', {\n          camera_id: id\n        });\n      });\n      setIsStreaming({\n        0: false,\n        1: false\n      });\n      setLiveFrames({\n        0: {\n          rgb: null,\n          tir: null\n        },\n        1: {\n          rgb: null,\n          tir: null\n        }\n      });\n    };\n    if (mode === 'live') {\n      startAllStreams();\n    }\n\n    // mode가 'live'에서 다른 것으로 바뀔 때 정리 함수 실행\n    return () => {\n      stopAllStreams();\n    };\n  }, [mode]); // <-- mode가 변경될 때만 이 훅이 실행됨\n\n  const handleModeChange = newMode => {\n    setMode(newMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center space-x-4 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleModeChange('live'),\n        className: `px-6 py-2 font-bold text-white rounded-lg transition-colors ${mode === 'live' ? 'bg-cyan-600' : 'bg-gray-600 hover:bg-gray-700'}`,\n        children: \"\\uC2E4\\uC2DC\\uAC04 \\uB2E4\\uC911 \\uAC10\\uC2DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleModeChange('test'),\n        className: `px-6 py-2 font-bold text-white rounded-lg transition-colors ${mode === 'test' ? 'bg-cyan-600' : 'bg-gray-600 hover:bg-gray-700'}`,\n        children: \"\\uC2DC\\uD5D8 \\uC601\\uC0C1 \\uBD84\\uC11D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 lg:grid-cols-3 gap-6 lg:items-start\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lg:col-span-2 space-y-6\",\n        children: mode === 'live' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(VideoStream, {\n            title: \"\\uCE74\\uBA54\\uB77C 1 - RGB\",\n            frameData: (_liveFrames$ = liveFrames[0]) === null || _liveFrames$ === void 0 ? void 0 : _liveFrames$.rgb,\n            isStreaming: isStreaming[0],\n            onStreamClick: () => {\n              var _liveFrames$2;\n              return handleStreamClick('카메라 1 - RGB', (_liveFrames$2 = liveFrames[0]) === null || _liveFrames$2 === void 0 ? void 0 : _liveFrames$2.rgb);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(VideoStream, {\n            title: \"\\uCE74\\uBA54\\uB77C 1 - TIR\",\n            frameData: (_liveFrames$3 = liveFrames[0]) === null || _liveFrames$3 === void 0 ? void 0 : _liveFrames$3.tir,\n            isStreaming: isStreaming[0],\n            onStreamClick: () => {\n              var _liveFrames$4;\n              return handleStreamClick('카메라 1 - TIR', (_liveFrames$4 = liveFrames[0]) === null || _liveFrames$4 === void 0 ? void 0 : _liveFrames$4.tir);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(VideoStream, {\n            title: \"\\uCE74\\uBA54\\uB77C 2 - RGB\",\n            frameData: (_liveFrames$5 = liveFrames[1]) === null || _liveFrames$5 === void 0 ? void 0 : _liveFrames$5.rgb,\n            isStreaming: isStreaming[1],\n            onStreamClick: () => {\n              var _liveFrames$6;\n              return handleStreamClick('카메라 2 - RGB', (_liveFrames$6 = liveFrames[1]) === null || _liveFrames$6 === void 0 ? void 0 : _liveFrames$6.rgb);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(VideoStream, {\n            title: \"\\uCE74\\uBA54\\uB77C 2 - TIR\",\n            frameData: (_liveFrames$7 = liveFrames[1]) === null || _liveFrames$7 === void 0 ? void 0 : _liveFrames$7.tir,\n            isStreaming: isStreaming[1],\n            onStreamClick: () => {\n              var _liveFrames$8;\n              return handleStreamClick('카메라 2 - TIR', (_liveFrames$8 = liveFrames[1]) === null || _liveFrames$8 === void 0 ? void 0 : _liveFrames$8.tir);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(TestModePanel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-6 h-full\",\n        children: [serverMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 bg-blue-900 rounded-lg text-center mb-4\",\n          children: serverMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(EventLog, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), fullscreenStream && /*#__PURE__*/_jsxDEV(FullscreenViewer, {\n      title: fullscreenStream.title,\n      frameData: fullscreenStream.frameData,\n      onClose: handleCloseFullscreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"vuiIOivft3MmVrljiLrbWm+Q9wQ=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","VideoStream","EventLog","TestModePanel","FullscreenViewer","initSocket","disconnectSocket","subscribeToEvent","sendEvent","alertSound","jsxDEV","_jsxDEV","Dashboard","_s","_liveFrames$","_liveFrames$3","_liveFrames$5","_liveFrames$7","serverMessage","setServerMessage","mode","setMode","cameraIds","liveFrames","setLiveFrames","rgb","tir","isStreaming","setIsStreaming","fullscreenStream","setFullscreenStream","personDetected","setPersonDetected","audioRef","useRef","handleStreamClick","title","frameData","handleCloseFullscreen","data","message","camera_id","prev","person_detected","startAllStreams","forEach","id","stopAllStreams","handleModeChange","newMode","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onStreamClick","_liveFrames$2","_liveFrames$4","_liveFrames$6","_liveFrames$8","onClose","_c","$RefreshReg$"],"sources":["D:/Project2/DashBoard/ver_2/frontend/src/components/Dashboard.js"],"sourcesContent":["// /frontend/src/components/Dashboard.js (최종 수정본)\r\n\r\nimport React, { useEffect, useState, useCallback } from 'react';\r\nimport VideoStream from './VideoStream';\r\nimport EventLog from './EventLog';\r\nimport TestModePanel from './TestModePanel';\r\nimport FullscreenViewer from './FullscreenViewer';\r\nimport { initSocket, disconnectSocket, subscribeToEvent, sendEvent } from '../services/socket';\r\nimport alertSound from '../assets/alarm.mp3';\r\n\r\nconst Dashboard = () => {\r\n  const [serverMessage, setServerMessage] = useState('');\r\n  const [mode, setMode] = useState('live');\r\n  \r\n  // 로컬 PC 웹캠 ID 목록\r\n  const cameraIds = [0, 1];\r\n\r\n  // 각 카메라의 프레임과 스트리밍 상태를 객체로 관리\r\n  const [liveFrames, setLiveFrames] = useState({ 0: { rgb: null, tir: null }, 1: { rgb: null, tir: null } });\r\n  const [isStreaming, setIsStreaming] = useState({ 0: false, 1: false });\r\n\r\n  // 전체 화면으로 표시할 스트림의 상태\r\n  const [fullscreenStream, setFullscreenStream] = useState(null);\r\n\r\n  // 각 카메라별 사람 탐지 여부 상태\r\n  const [personDetected, setPersonDetected] = useState({ 0: false, 1: false });\r\n  // 소리 재생을 위한 ref\r\n  const audioRef = useRef(null);\r\n\r\n  // VideoStream 컴포넌트를 클릭했을 때 호출될 함수\r\n  const handleStreamClick = (title, frameData) => {\r\n    // if (frameData) {\r\n      setFullscreenStream({ title, frameData });\r\n    // }\r\n  };\r\n\r\n  // 전체 화면 뷰어를 닫는 함수\r\n  const handleCloseFullscreen = () => {\r\n    setFullscreenStream(null);\r\n  };\r\n\r\n  // 1. 소켓 연결/해제 전용 useEffect (컴포넌트 로드/언로드 시 딱 한 번만 실행)\r\n  useEffect(() => {\r\n    initSocket();\r\n    \r\n    subscribeToEvent('response', (data) => {\r\n      setServerMessage(data.message);\r\n    });\r\n    \r\n    subscribeToEvent('video_frame', (data) => {\r\n      if (typeof data.camera_id === 'number') {\r\n        setLiveFrames(prev => ({\r\n          ...prev,\r\n          [data.camera_id]: { rgb: data.rgb, tir: data.tir }\r\n        }));\r\n        // 백엔드로부터 받은 person_detected 플래그로 상태 업데이트\r\n        setPersonDetected(prev => ({ ...prev, [data.camera_id]: data.person_detected }));\r\n      }\r\n    });\r\n\r\n    // 컴포넌트가 사라질 때 소켓 연결을 완전히 해제\r\n    return () => {\r\n      disconnectSocket();\r\n    };\r\n  }, []); // <-- 의존성 배열을 비워서 최초 1회만 실행되도록 함\r\n\r\n  // 2. 스트림 시작/중지 전용 useEffect (mode가 바뀔 때만 실행)\r\n  useEffect(() => {\r\n    const startAllStreams = () => {\r\n      cameraIds.forEach(id => {\r\n        sendEvent('start_stream', { camera_id: id });\r\n        setIsStreaming(prev => ({ ...prev, [id]: true }));\r\n      });\r\n    };\r\n\r\n    const stopAllStreams = () => {\r\n      cameraIds.forEach(id => {\r\n        sendEvent('stop_stream', { camera_id: id });\r\n      });\r\n      setIsStreaming({ 0: false, 1: false });\r\n      setLiveFrames({ 0: { rgb: null, tir: null }, 1: { rgb: null, tir: null } });\r\n    };\r\n\r\n    if (mode === 'live') {\r\n      startAllStreams();\r\n    }\r\n\r\n    // mode가 'live'에서 다른 것으로 바뀔 때 정리 함수 실행\r\n    return () => {\r\n      stopAllStreams();\r\n    };\r\n  }, [mode]); // <-- mode가 변경될 때만 이 훅이 실행됨\r\n\r\n  const handleModeChange = (newMode) => {\r\n    setMode(newMode);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex justify-center space-x-4 mb-4\">\r\n        <button onClick={() => handleModeChange('live')} className={`px-6 py-2 font-bold text-white rounded-lg transition-colors ${mode === 'live' ? 'bg-cyan-600' : 'bg-gray-600 hover:bg-gray-700'}`}>\r\n          실시간 다중 감시\r\n        </button>\r\n        <button onClick={() => handleModeChange('test')} className={`px-6 py-2 font-bold text-white rounded-lg transition-colors ${mode === 'test' ? 'bg-cyan-600' : 'bg-gray-600 hover:bg-gray-700'}`}>\r\n          시험 영상 분석\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 lg:items-start\">\r\n        <div className=\"lg:col-span-2 space-y-6\">\r\n          {mode === 'live' ? (\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <VideoStream title=\"카메라 1 - RGB\" frameData={liveFrames[0]?.rgb} isStreaming={isStreaming[0]} onStreamClick={() => handleStreamClick('카메라 1 - RGB', liveFrames[0]?.rgb)} />\r\n              <VideoStream title=\"카메라 1 - TIR\" frameData={liveFrames[0]?.tir} isStreaming={isStreaming[0]} onStreamClick={() => handleStreamClick('카메라 1 - TIR', liveFrames[0]?.tir)} />\r\n              <VideoStream title=\"카메라 2 - RGB\" frameData={liveFrames[1]?.rgb} isStreaming={isStreaming[1]} onStreamClick={() => handleStreamClick('카메라 2 - RGB', liveFrames[1]?.rgb)} />\r\n              <VideoStream title=\"카메라 2 - TIR\" frameData={liveFrames[1]?.tir} isStreaming={isStreaming[1]} onStreamClick={() => handleStreamClick('카메라 2 - TIR', liveFrames[1]?.tir)} />\r\n            </div>\r\n          ) : (\r\n            <TestModePanel />\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"space-y-6 h-full\">\r\n          {serverMessage && <div className=\"p-4 bg-blue-900 rounded-lg text-center mb-4\">{serverMessage}</div>}\r\n          <EventLog />\r\n        </div>\r\n      </div>\r\n\r\n      {/* fullscreenStream 상태가 유효할 때만 FullscreenViewer를 렌더링*/}\r\n      {fullscreenStream && (\r\n        <FullscreenViewer\r\n          title={fullscreenStream.title}\r\n          frameData={fullscreenStream.frameData}\r\n          onClose={handleCloseFullscreen}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}